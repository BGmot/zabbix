<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
   <version>5.0</version>
   <date>2022-04-10T22:31:48Z</date>
   <groups>
      <group>
         <name>Templates/Applications</name>
      </group>
   </groups>
   <templates>
      <template>
         <template>Template App PFSense SNMP</template>
         <name>Template App PFSense SNMP</name>
         <description>Template for monitoring pfSense by SNMP&#13;
Setup:&#13;
  1. Enable SNMP daemon at Services in pfSense web interface https://docs.netgate.com/pfsense/en/latest/services/snmp.html&#13;
  2. Setup firewall rule to get access from Zabbix proxy or Zabbix server by SNMP https://docs.netgate.com/pfsense/en/latest/firewall/index.html#managing-firewall-rules&#13;
  3. Link template to the host&#13;
  &#13;
&#13;
&#13;
MIBs used:&#13;
BEGEMOT-PF-MIB&#13;
HOST-RESOURCES-MIB&#13;
SNMPv2-MIB&#13;
UCD-DISKIO-MIB&#13;
UCD-SNMP-MIB&#13;
&#13;
Template tooling version used: 0.39</description>
         <groups>
            <group>
               <name>Templates/Applications</name>
            </group>
         </groups>
         <applications>
            <application>
               <name>CPU</name>
            </application>
            <application>
               <name>General</name>
            </application>
            <application>
               <name>Memory</name>
            </application>
            <application>
               <name>Network interfaces</name>
            </application>
            <application>
               <name>pfSense</name>
            </application>
            <application>
               <name>Status</name>
            </application>
            <application>
               <name>Storage</name>
            </application>
         </applications>
         <items>
            <item>
               <name>PFSense: ICMP ping</name>
               <type>SIMPLE</type>
               <key>icmpping</key>
               <history>7d</history>
               <description>Host accessibility by ICMP.&#13;
0 - ICMP ping fails.&#13;
1 - ICMP ping successful.</description>
               <applications>
                  <application>
                     <name>Status</name>
                  </application>
               </applications>
               <valuemap>
                  <name>Service state</name>
               </valuemap>
               <triggers>
                  <trigger>
                     <expression>{max(#3)}=0</expression>
                     <name>PFSense: Unavailable by ICMP ping</name>
                     <priority>HIGH</priority>
                     <description>Last three attempts returned timeout.  Please check device connectivity.</description>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>PFSense: ICMP loss</name>
               <type>SIMPLE</type>
               <key>icmppingloss</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>%</units>
               <description>Percentage of lost packets.</description>
               <applications>
                  <application>
                     <name>Status</name>
                  </application>
               </applications>
               <triggers>
                  <trigger>
                     <expression>{min(5m)}&gt;{$ICMP_LOSS_WARN} and {min(5m)}&lt;100</expression>
                     <name>PFSense: High ICMP ping loss</name>
                     <opdata>Loss: {ITEM.LASTVALUE1}</opdata>
                     <priority>WARNING</priority>
                     <description>ICMP packets loss detected.</description>
                     <dependencies>
                        <dependency>
                           <name>PFSense: Unavailable by ICMP ping</name>
                           <expression>{Template App PFSense SNMP:icmpping.max(#3)}=0</expression>
                        </dependency>
                     </dependencies>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>PFSense: ICMP response time</name>
               <type>SIMPLE</type>
               <key>icmppingsec</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>s</units>
               <description>ICMP ping response time (in seconds).</description>
               <applications>
                  <application>
                     <name>Status</name>
                  </application>
               </applications>
               <triggers>
                  <trigger>
                     <expression>{avg(5m)}&gt;{$ICMP_RESPONSE_TIME_WARN}</expression>
                     <name>PFSense: High ICMP ping response time</name>
                     <opdata>Value: {ITEM.LASTVALUE1}</opdata>
                     <priority>WARNING</priority>
                     <description>Average ICMP response time is too big.</description>
                     <dependencies>
                        <dependency>
                           <name>PFSense: Unavailable by ICMP ping</name>
                           <expression>{Template App PFSense SNMP:icmpping.max(#3)}=0</expression>
                        </dependency>
                     </dependencies>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>PFSense: DHCP server status</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>.1.3.6.1.2.1.25.4.2.1.7["index",".1.3.6.1.2.1.25.4.2.1.2","dhcpd"]</snmp_oid>
               <key>pfsense.dhcpd.status</key>
               <history>7d</history>
               <description>MIB: HOST-RESOURCES-MIB&#13;
The status of DHCP server process.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
               <valuemap>
                  <name>Services status</name>
               </valuemap>
               <triggers>
                  <trigger>
                     <expression>{nodata(5m)}=1</expression>
                     <name>PFSense: DHCP server is not running</name>
                     <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                     <priority>AVERAGE</priority>
                     <description>Please check DHCP server settings https://docs.netgate.com/pfsense/en/latest/services/dhcp/index.html</description>
                     <dependencies>
                        <dependency>
                           <name>PFSense: No SNMP data collection</name>
                           <expression>{Template App PFSense SNMP:zabbix[host,snmp,available].max({$SNMP.TIMEOUT})}=0</expression>
                        </dependency>
                        <dependency>
                           <name>PFSense: Unavailable by ICMP ping</name>
                           <expression>{Template App PFSense SNMP:icmpping.max(#3)}=0</expression>
                        </dependency>
                     </dependencies>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>PFSense: DNS server status</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>.1.3.6.1.2.1.25.4.2.1.7["index",".1.3.6.1.2.1.25.4.2.1.2","unbound"]</snmp_oid>
               <key>pfsense.dns.status</key>
               <history>7d</history>
               <description>MIB: HOST-RESOURCES-MIB&#13;
The status of DNS server process.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
               <valuemap>
                  <name>Services status</name>
               </valuemap>
               <triggers>
                  <trigger>
                     <expression>{nodata(5m)}=1</expression>
                     <name>PFSense: DNS server is not running</name>
                     <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                     <priority>AVERAGE</priority>
                     <description>Please check DNS server settings https://docs.netgate.com/pfsense/en/latest/services/dns/index.html</description>
                     <dependencies>
                        <dependency>
                           <name>PFSense: No SNMP data collection</name>
                           <expression>{Template App PFSense SNMP:zabbix[host,snmp,available].max({$SNMP.TIMEOUT})}=0</expression>
                        </dependency>
                        <dependency>
                           <name>PFSense: Unavailable by ICMP ping</name>
                           <expression>{Template App PFSense SNMP:icmpping.max(#3)}=0</expression>
                        </dependency>
                     </dependencies>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>PFSense: State of nginx process</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>.1.3.6.1.2.1.25.4.2.1.7["index",".1.3.6.1.2.1.25.4.2.1.2","nginx"]</snmp_oid>
               <key>pfsense.nginx.status</key>
               <history>7d</history>
               <description>MIB: HOST-RESOURCES-MIB&#13;
The status of nginx process.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
               <valuemap>
                  <name>Services status</name>
               </valuemap>
               <triggers>
                  <trigger>
                     <expression>{nodata(5m)}=1</expression>
                     <name>PFSense: Web server is not running</name>
                     <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                     <priority>AVERAGE</priority>
                     <description>Please check nginx service status.</description>
                     <dependencies>
                        <dependency>
                           <name>PFSense: No SNMP data collection</name>
                           <expression>{Template App PFSense SNMP:zabbix[host,snmp,available].max({$SNMP.TIMEOUT})}=0</expression>
                        </dependency>
                        <dependency>
                           <name>PFSense: Unavailable by ICMP ping</name>
                           <expression>{Template App PFSense SNMP:icmpping.max(#3)}=0</expression>
                        </dependency>
                     </dependencies>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>PFSense: Packets with bad offset</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.12325.1.200.1.2.2.0</snmp_oid>
               <key>pfsense.packets.bad.offset</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>pps</units>
               <description>MIB: BEGEMOT-PF-MIB&#13;
True if the packet was logged with the specified packet filter reason code. The known codes are: match, bad-offset, fragment, short, normalize, and memory.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params/>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: Fragmented packets</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.12325.1.200.1.2.3.0</snmp_oid>
               <key>pfsense.packets.fragment</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>pps</units>
               <description>MIB: BEGEMOT-PF-MIB&#13;
True if the packet was logged with the specified packet filter reason code. The known codes are: match, bad-offset, fragment, short, normalize, and memory.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params/>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: Packets matched a filter rule</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.12325.1.200.1.2.1.0</snmp_oid>
               <key>pfsense.packets.match</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>pps</units>
               <description>MIB: BEGEMOT-PF-MIB&#13;
True if the packet was logged with the specified packet filter reason code. The known codes are: match, bad-offset, fragment, short, normalize, and memory.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params/>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: Packets dropped due to memory limitation</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.12325.1.200.1.2.6.0</snmp_oid>
               <key>pfsense.packets.mem.drop</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>pps</units>
               <description>MIB: BEGEMOT-PF-MIB&#13;
True if the packet was logged with the specified packet filter reason code. The known codes are: match, bad-offset, fragment, short, normalize, and memory.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params/>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: Normalized packets</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.12325.1.200.1.2.5.0</snmp_oid>
               <key>pfsense.packets.normalize</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>pps</units>
               <description>MIB: BEGEMOT-PF-MIB&#13;
True if the packet was logged with the specified packet filter reason code. The known codes are: match, bad-offset, fragment, short, normalize, and memory.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params/>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: Short packets</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.12325.1.200.1.2.4.0</snmp_oid>
               <key>pfsense.packets.short</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>pps</units>
               <description>MIB: BEGEMOT-PF-MIB&#13;
True if the packet was logged with the specified packet filter reason code. The known codes are: match, bad-offset, fragment, short, normalize, and memory.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params/>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: Packet filter running status</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.12325.1.200.1.1.1.0</snmp_oid>
               <key>pfsense.pf.status</key>
               <history>7d</history>
               <description>MIB: BEGEMOT-PF-MIB&#13;
True if packet filter is currently enabled.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
               <valuemap>
                  <name>SNMPv2-TC::TruthValue</name>
               </valuemap>
               <triggers>
                  <trigger>
                     <expression>{last()}&lt;&gt;1</expression>
                     <name>PFSense: Packet filter is not running</name>
                     <opdata>Current running state: {ITEM.LASTVALUE1}</opdata>
                     <priority>HIGH</priority>
                     <description>Please check PF status.</description>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>PFSense: Firewall rules count</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.11.1.0</snmp_oid>
               <key>pfsense.rules.count</key>
               <history>7d</history>
               <description>MIB: BEGEMOT-PF-MIB&#13;
The number of labeled filter rules on this system.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>PFSense: Source tracking table current</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.12325.1.200.1.4.1.0</snmp_oid>
               <key>pfsense.source.tracking.table.count</key>
               <history>7d</history>
               <description>MIB: BEGEMOT-PF-MIB&#13;
Number of entries in the source tracking table.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>PFSense: Source tracking table limit</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.12325.1.200.1.5.2.0</snmp_oid>
               <key>pfsense.source.tracking.table.limit</key>
               <history>7d</history>
               <description>MIB: BEGEMOT-PF-MIB&#13;
Maximum number of 'sticky-address' or 'source-track' rules in the ruleset.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>PFSense: Source tracking table utilization in %</name>
               <type>CALCULATED</type>
               <key>pfsense.source.tracking.table.pused</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>%</units>
               <params>last("pfsense.source.tracking.table.count") * 100 / last("pfsense.source.tracking.table.limit")</params>
               <description>Utilization of source tracking table in %.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
               <triggers>
                  <trigger>
                     <expression>{min(#3)}&gt;{$SOURCE.TRACKING.TABLE.UTIL.MAX}</expression>
                     <name>PFSense: Source tracking table usage more than {$SOURCE.TRACKING.TABLE.UTIL.MAX}.</name>
                     <opdata>Current utilization: {ITEM.LASTVALUE1}</opdata>
                     <priority>WARNING</priority>
                     <description>Please check the number of sticky connections https://docs.netgate.com/pfsense/en/latest/monitoring/status/firewall-states-sources.html</description>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>PFSense: States table current</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.12325.1.200.1.3.1.0</snmp_oid>
               <key>pfsense.state.table.count</key>
               <history>7d</history>
               <description>MIB: BEGEMOT-PF-MIB&#13;
Number of entries in the state table.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>PFSense: States table limit</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.12325.1.200.1.5.1.0</snmp_oid>
               <key>pfsense.state.table.limit</key>
               <history>7d</history>
               <description>MIB: BEGEMOT-PF-MIB&#13;
Maximum number of 'keep state' rules in the ruleset.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>PFSense: States table utilization in %</name>
               <type>CALCULATED</type>
               <key>pfsense.state.table.pused</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>%</units>
               <params>last("pfsense.state.table.count") * 100 / last("pfsense.state.table.limit")</params>
               <description>Utilization of state table in %.</description>
               <applications>
                  <application>
                     <name>pfSense</name>
                  </application>
               </applications>
               <triggers>
                  <trigger>
                     <expression>{min(#3)}&gt;{$STATE.TABLE.UTIL.MAX}</expression>
                     <name>PFSense: State table usage more than {$STATE.TABLE.UTIL.MAX}.</name>
                     <opdata>Current utilization: {ITEM.LASTVALUE1}</opdata>
                     <priority>WARNING</priority>
                     <description>Please check the number of connections https://docs.netgate.com/pfsense/en/latest/config/advanced-firewall-nat.html#config-advanced-firewall-maxstates</description>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>PFSense: System contact details</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.2.1.1.4.0</snmp_oid>
               <key>system.contact</key>
               <delay>15m</delay>
               <history>7d</history>
               <trends>0</trends>
               <value_type>CHAR</value_type>
               <description>MIB: SNMPv2-MIB&#13;
The textual identification of the contact person for this managed node, together with information on how to contact this person. If no contact information is known, the value is the zero-length string.</description>
               <inventory_link>CONTACT</inventory_link>
               <applications>
                  <application>
                     <name>General</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>6h</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: Interrupts per second</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.11.59.0</snmp_oid>
               <key>system.cpu.intr</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <description>MIB: UCD-SNMP-MIB&#13;
Number of interrupts processed.</description>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params/>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: Load average (1m avg)</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.10.1.3["index","1.3.6.1.4.1.2021.10.1.2", "Load-1"]</snmp_oid>
               <key>system.cpu.load.avg1</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <description>MIB: UCD-SNMP-MIB&#13;
The 1 minute load averages.</description>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>PFSense: Load average (15m avg)</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.10.1.3["index","1.3.6.1.4.1.2021.10.1.2", "Load-15"]</snmp_oid>
               <key>system.cpu.load.avg15</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <description>MIB: UCD-SNMP-MIB&#13;
The 15 minutes load averages.</description>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>PFSense: Load average (5m avg)</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.10.1.3["index","1.3.6.1.4.1.2021.10.1.2", "Load-5"]</snmp_oid>
               <key>system.cpu.load.avg5</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <description>MIB: UCD-SNMP-MIB&#13;
The 5 minutes load averages.</description>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>PFSense: Number of CPUs</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.2.1.25.3.3.1.1]</snmp_oid>
               <key>system.cpu.num</key>
               <history>7d</history>
               <description>MIB: HOST-RESOURCES-MIB&#13;
Count the number of CPU cores by counting number of cores discovered in hrProcessorTable using LLD.</description>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>JAVASCRIPT</type>
                     <params>//count the number of cores
return JSON.parse(value).length;
</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: Context switches per second</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.11.60.0</snmp_oid>
               <key>system.cpu.switches</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <description>MIB: UCD-SNMP-MIB&#13;
Number of context switches.</description>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params/>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: System description</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.2.1.1.1.0</snmp_oid>
               <key>system.descr</key>
               <delay>15m</delay>
               <history>7d</history>
               <trends>0</trends>
               <value_type>CHAR</value_type>
               <description>MIB: SNMPv2-MIB&#13;
System description of the host.</description>
               <applications>
                  <application>
                     <name>General</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>6h</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: System location</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.2.1.1.6.0</snmp_oid>
               <key>system.location</key>
               <delay>15m</delay>
               <history>7d</history>
               <trends>0</trends>
               <value_type>CHAR</value_type>
               <description>MIB: SNMPv2-MIB&#13;
The physical location of this node. If the location is unknown, the value is the zero-length string.</description>
               <inventory_link>LOCATION</inventory_link>
               <applications>
                  <application>
                     <name>General</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>6h</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: System name</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.2.1.1.5.0</snmp_oid>
               <key>system.name</key>
               <delay>15m</delay>
               <history>7d</history>
               <trends>0</trends>
               <value_type>CHAR</value_type>
               <description>MIB: SNMPv2-MIB&#13;
System host name.</description>
               <inventory_link>NAME</inventory_link>
               <applications>
                  <application>
                     <name>General</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>6h</params>
                  </step>
               </preprocessing>
               <triggers>
                  <trigger>
                     <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                     <name>PFSense: System name has changed (new name: {ITEM.VALUE})</name>
                     <priority>INFO</priority>
                     <description>System name has changed. Ack to close.</description>
                     <manual_close>YES</manual_close>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>PFSense: System object ID</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.2.1.1.2.0</snmp_oid>
               <key>system.objectid</key>
               <delay>15m</delay>
               <history>7d</history>
               <trends>0</trends>
               <value_type>CHAR</value_type>
               <description>MIB: SNMPv2-MIB&#13;
The vendor authoritative identification of the network management subsystem contained in the entity. This value is allocated within the SMI enterprises subtree (1.3.6.1.4.1) and provides an easy and unambiguous means for determining what kind of box is being managed.</description>
               <applications>
                  <application>
                     <name>General</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                     <params>6h</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: Free swap space</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.4.4.0</snmp_oid>
               <key>system.swap.free</key>
               <history>7d</history>
               <units>B</units>
               <description>MIB: UCD-SNMP-MIB&#13;
The amount of swap space currently unused or available.</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: Free swap space in %</name>
               <type>CALCULATED</type>
               <key>system.swap.pfree</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>%</units>
               <params>last("system.swap.free")/last("system.swap.total")*100</params>
               <description>The free space of swap volume/file in percent.</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>PFSense: Total swap space</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.4.3.0</snmp_oid>
               <key>system.swap.total</key>
               <history>7d</history>
               <units>B</units>
               <description>MIB: UCD-SNMP-MIB&#13;
The total amount of swap space configured for this host.</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: Uptime</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.2.1.25.1.1.0</snmp_oid>
               <key>system.uptime</key>
               <delay>30s</delay>
               <history>7d</history>
               <trends>0d</trends>
               <units>uptime</units>
               <description>MIB: SNMPv2-MIB&#13;
System uptime in 'N days, hh:mm:ss' format.</description>
               <applications>
                  <application>
                     <name>Status</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>0.01</params>
                  </step>
               </preprocessing>
               <triggers>
                  <trigger>
                     <expression>{last()}&lt;10m</expression>
                     <name>PFSense: has been restarted (uptime &lt; 10m)</name>
                     <priority>INFO</priority>
                     <description>Uptime is less than 10 minutes.</description>
                     <manual_close>YES</manual_close>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>PFSense: Available memory</name>
               <type>CALCULATED</type>
               <key>vm.memory.available</key>
               <history>7d</history>
               <units>B</units>
               <params>last("vm.memory.free")+last("vm.memory.buffers")+last("vm.memory.cached")</params>
               <description>Please note that memory utilization is a rough estimate, since memory available is calculated as free+buffers+cached, which is not 100% accurate, but the best we can get using SNMP.</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>PFSense: Memory (buffers)</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.4.14.0</snmp_oid>
               <key>vm.memory.buffers</key>
               <history>7d</history>
               <units>B</units>
               <description>MIB: UCD-SNMP-MIB&#13;
The total amount of real or virtual memory currently allocated for use as memory buffers.</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: Memory (cached)</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.4.15.0</snmp_oid>
               <key>vm.memory.cached</key>
               <history>7d</history>
               <units>B</units>
               <description>MIB: UCD-SNMP-MIB&#13;
The total amount of real or virtual memory currently allocated for use as cached memory.</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: Free memory</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.4.6.0</snmp_oid>
               <key>vm.memory.free</key>
               <history>7d</history>
               <units>B</units>
               <description>MIB: UCD-SNMP-MIB&#13;
The amount of real/physical memory currently unused or available.</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: Total memory</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.4.5.0</snmp_oid>
               <key>vm.memory.total</key>
               <history>7d</history>
               <units>B</units>
               <description>MIB: UCD-SNMP-MIB&#13;
Total memory in Bytes.</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>PFSense: Memory utilization</name>
               <type>CALCULATED</type>
               <key>vm.memory.util</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>%</units>
               <params>(last("vm.memory.total")-(last("vm.memory.free")+last("vm.memory.buffers")+last("vm.memory.cached")))/last("vm.memory.total")*100</params>
               <description>Please note that memory utilization is a rough estimate, since memory available is calculated as free+buffers+cached, which is not 100% accurate, but the best we can get using SNMP.</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <triggers>
                  <trigger>
                     <expression>{min(5m)}&gt;{$MEMORY.UTIL.MAX}</expression>
                     <name>PFSense: High memory utilization (&gt;{$MEMORY.UTIL.MAX}% for 5m)</name>
                     <priority>AVERAGE</priority>
                     <description>The system is running out of free memory.</description>
                     <dependencies>
                        <dependency>
                           <name>PFSense: Lack of available memory (&lt;{$MEMORY.AVAILABLE.MIN} of {ITEM.VALUE2})</name>
                           <expression>{Template App PFSense SNMP:vm.memory.available.min(5m)}&lt;{$MEMORY.AVAILABLE.MIN} and {Template App PFSense SNMP:vm.memory.total.last()}&gt;0</expression>
                        </dependency>
                     </dependencies>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>PFSense: SNMP agent availability</name>
               <type>INTERNAL</type>
               <key>zabbix[host,snmp,available]</key>
               <history>7d</history>
               <description>Availability of SNMP checks on the host. The value of this item corresponds to availability icons in the host list.&#13;
Possible value:&#13;
0 - not available&#13;
1 - available&#13;
2 - unknown</description>
               <applications>
                  <application>
                     <name>Status</name>
                  </application>
               </applications>
               <valuemap>
                  <name>zabbix.host.available</name>
               </valuemap>
               <triggers>
                  <trigger>
                     <expression>{max({$SNMP.TIMEOUT})}=0</expression>
                     <name>PFSense: No SNMP data collection</name>
                     <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                     <priority>WARNING</priority>
                     <description>SNMP is not available for polling. Please check device connectivity and SNMP settings.</description>
                     <dependencies>
                        <dependency>
                           <name>PFSense: Unavailable by ICMP ping</name>
                           <expression>{Template App PFSense SNMP:icmpping.max(#3)}=0</expression>
                        </dependency>
                     </dependencies>
                  </trigger>
               </triggers>
            </item>
         </items>
         <discovery_rules>
            <discovery_rule>
               <name>CPU discovery</name>
               <type>DEPENDENT</type>
               <key>cpu.discovery</key>
               <delay>0</delay>
               <description>This discovery will create set of per core CPU metrics from UCD-SNMP-MIB, using {#CPU.COUNT} in preprocessing. That's the only reason why LLD is used.</description>
               <item_prototypes>
                  <item_prototype>
                     <name>PFSense: CPU idle time</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.11.11.0</snmp_oid>
                     <key>system.cpu.idle[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
The time the CPU has spent doing nothing.</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: CPU interrupt time</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.11.56.0</snmp_oid>
                     <key>system.cpu.interrupt[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
The amount of time the CPU has been servicing hardware interrupts.</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %, divide by N, where N is number of cores.
return value/{#CPU.COUNT}
</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: CPU iowait time</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.11.54.0</snmp_oid>
                     <key>system.cpu.iowait[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
Amount of time the CPU has been waiting for I/O to complete.</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %, divide by N, where N is number of cores.
return value/{#CPU.COUNT}
</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: CPU nice time</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.11.51.0</snmp_oid>
                     <key>system.cpu.nice[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
The time the CPU has spent running users' processes that have been niced.</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %, divide by N, where N is number of cores.
return value/{#CPU.COUNT}
</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: CPU system time</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.11.52.0</snmp_oid>
                     <key>system.cpu.system[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
The time the CPU has spent running the kernel and its processes.</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %, divide by N, where N is number of cores.
return value/{#CPU.COUNT}
</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: CPU user time</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.11.50.0</snmp_oid>
                     <key>system.cpu.user[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
The time the CPU has spent running users' processes that are not niced.</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %, divide by N, where N is number of cores.
return value/{#CPU.COUNT}
</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: CPU utilization</name>
                     <type>DEPENDENT</type>
                     <key>system.cpu.util[{#SNMPINDEX}]</key>
                     <delay>0</delay>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>CPU utilization in %.</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//Calculate utilization
return (100 - value)
</params>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>system.cpu.idle[{#SNMPINDEX}]</key>
                     </master_item>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{min(5m)}&gt;{$CPU.UTIL.CRIT}</expression>
                           <name>PFSense: High CPU utilization (over {$CPU.UTIL.CRIT}% for 5m)</name>
                           <opdata>Current utilization: {ITEM.LASTVALUE1}</opdata>
                           <priority>WARNING</priority>
                           <description>CPU utilization is too high. The system might be slow to respond.</description>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
               </item_prototypes>
               <graph_prototypes>
                  <graph_prototype>
                     <name>PFSense: CPU usage{#SINGLETON}</name>
                     <type>STACKED</type>
                     <ymin_type_1>FIXED</ymin_type_1>
                     <ymax_type_1>FIXED</ymax_type_1>
                     <graph_items>
                        <graph_item>
                           <color>1A7C11</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>system.cpu.system[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>2774A4</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>system.cpu.user[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>F63100</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>system.cpu.nice[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>A54F10</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>system.cpu.iowait[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>FC6EA3</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>system.cpu.interrupt[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>PFSense: CPU utilization{#SINGLETON}</name>
                     <ymin_type_1>FIXED</ymin_type_1>
                     <ymax_type_1>FIXED</ymax_type_1>
                     <graph_items>
                        <graph_item>
                           <drawtype>GRADIENT_LINE</drawtype>
                           <color>1A7C11</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>system.cpu.util[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
               </graph_prototypes>
               <master_item>
                  <key>system.cpu.num</key>
               </master_item>
               <preprocessing>
                  <step>
                     <type>JAVASCRIPT</type>
                     <params>//count the number of CPU cores
return JSON.stringify([{"{#CPU.COUNT}": value, "{#SNMPINDEX}": 0, "{#SINGLETON}":""}])
</params>
                  </step>
               </preprocessing>
            </discovery_rule>
            <discovery_rule>
               <name>Network interfaces discovery</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>discovery[{#IFOPERSTATUS},1.3.6.1.2.1.2.2.1.8,{#IFADMINSTATUS},1.3.6.1.2.1.2.2.1.7,{#IFALIAS},1.3.6.1.2.1.31.1.1.1.18,{#IFNAME},1.3.6.1.2.1.31.1.1.1.1,{#IFDESCR},1.3.6.1.2.1.2.2.1.2,{#IFTYPE},1.3.6.1.2.1.2.2.1.3]</snmp_oid>
               <key>net.if.discovery</key>
               <delay>1h</delay>
               <filter>
                  <evaltype>AND</evaltype>
                  <conditions>
                     <condition>
                        <macro>{#IFADMINSTATUS}</macro>
                        <value>{$NET.IF.IFADMINSTATUS.MATCHES}</value>
                        <formulaid>A</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFADMINSTATUS}</macro>
                        <value>{$NET.IF.IFADMINSTATUS.NOT_MATCHES}</value>
                        <operator>NOT_MATCHES_REGEX</operator>
                        <formulaid>B</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFOPERSTATUS}</macro>
                        <value>{$NET.IF.IFOPERSTATUS.MATCHES}</value>
                        <formulaid>I</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFOPERSTATUS}</macro>
                        <value>{$NET.IF.IFOPERSTATUS.NOT_MATCHES}</value>
                        <operator>NOT_MATCHES_REGEX</operator>
                        <formulaid>J</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFNAME}</macro>
                        <value>{$NET.IF.IFNAME.MATCHES}</value>
                        <formulaid>G</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFNAME}</macro>
                        <value>{$NET.IF.IFNAME.NOT_MATCHES}</value>
                        <operator>NOT_MATCHES_REGEX</operator>
                        <formulaid>H</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFDESCR}</macro>
                        <value>{$NET.IF.IFDESCR.MATCHES}</value>
                        <formulaid>E</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFDESCR}</macro>
                        <value>{$NET.IF.IFDESCR.NOT_MATCHES}</value>
                        <operator>NOT_MATCHES_REGEX</operator>
                        <formulaid>F</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFALIAS}</macro>
                        <value>{$NET.IF.IFALIAS.MATCHES}</value>
                        <formulaid>C</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFALIAS}</macro>
                        <value>{$NET.IF.IFALIAS.NOT_MATCHES}</value>
                        <operator>NOT_MATCHES_REGEX</operator>
                        <formulaid>D</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFTYPE}</macro>
                        <value>{$NET.IF.IFTYPE.MATCHES}</value>
                        <formulaid>K</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFTYPE}</macro>
                        <value>{$NET.IF.IFTYPE.NOT_MATCHES}</value>
                        <operator>NOT_MATCHES_REGEX</operator>
                        <formulaid>L</formulaid>
                     </condition>
                  </conditions>
               </filter>
               <description>Discovering interfaces from IF-MIB.</description>
               <item_prototypes>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Inbound IPv4 traffic blocked</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.8["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.in.block.v4.bps[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>bps</units>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
IPv4 bits per second blocked coming in on this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>8</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Inbound IPv4 packets blocked</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.12["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.in.block.v4.pps[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>pps</units>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
The number of IPv4 packets blocked coming in on this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Inbound IPv6 traffic blocked</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.16["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.in.block.v6.bps[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>bps</units>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
IPv6 bits per second blocked coming in on this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>8</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Inbound IPv6 packets blocked</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.20["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.in.block.v6.pps[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>pps</units>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
The number of IPv6 packets blocked coming in on this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Inbound packets discarded</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.2.2.1.13.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.in.discards[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <description>MIB: IF-MIB&#13;
The number of inbound packets which were chosen to be discarded&#13;
even though no errors had been detected to prevent their being deliverable to a higher-layer protocol.&#13;
One possible reason for discarding such a packet could be to free up buffer space.&#13;
Discontinuities in the value of this counter can occur at re-initialization of the management system,&#13;
and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Inbound packets with errors</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.2.2.1.14.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.in.errors[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <description>MIB: IF-MIB&#13;
For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character-oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{min(5m)}&gt;{$IF.ERRORS.WARN:"{#IFNAME}"}</expression>
                           <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                           <recovery_expression>{max(5m)}&lt;{$IF.ERRORS.WARN:"{#IFNAME}"}*0.8</recovery_expression>
                           <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: High input error rate ( &gt; {$IF.ERRORS.WARN:"{#IFNAME}"} for 5m)</name>
                           <opdata>errors in: {ITEM.LASTVALUE1}</opdata>
                           <priority>WARNING</priority>
                           <description>Recovers when below 80% of {$IF.ERRORS.WARN:"{#IFNAME}"} threshold.</description>
                           <dependencies>
                              <dependency>
                                 <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Link down</name>
                                 <expression>{$IFCONTROL:"{#IFNAME}"}=1 and {Template App PFSense SNMP:net.if.status[{#SNMPINDEX}].last()}=2</expression>
                              </dependency>
                           </dependencies>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Inbound IPv4 traffic passed</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.7["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.in.pass.v4.bps[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>bps</units>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
IPv4 bits per second passed coming in on this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>8</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Inbound IPv4 packets passed</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.11["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.in.pass.v4.pps[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>pps</units>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
The number of IPv4 packets passed coming in on this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Inbound IPv6 traffic passed</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.15["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.in.pass.v6.bps[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>bps</units>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
IPv6 bits per second passed coming in on this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>8</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Inbound IPv6 packets passed</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.19["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.in.pass.v6.pps[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>pps</units>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
The number of IPv6 packets passed coming in on this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Bits received</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.31.1.1.1.6.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.in[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>bps</units>
                     <description>MIB: IF-MIB&#13;
The total number of octets received on the interface, including framing characters. This object is a 64-bit version of ifInOctets. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>8</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Outbound IPv4 traffic blocked</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.10["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.out.block.v4.bps[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>bps</units>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
IPv4 bits per second blocked going out on this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>8</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Outbound IPv4 packets blocked</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.14["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.out.block.v4.pps[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>pps</units>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
The number of IPv4 packets blocked going out on this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Outbound IPv6 traffic blocked</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.18["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.out.block.v6.bps[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>bps</units>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
IPv6 bits per second blocked going out on this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>8</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Outbound IPv6 packets blocked</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.22["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.out.block.v6.pps[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>pps</units>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
The number of IPv6 packets blocked going out on this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Outbound packets discarded</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.2.2.1.19.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.out.discards[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <description>MIB: IF-MIB&#13;
The number of outbound packets which were chosen to be discarded&#13;
even though no errors had been detected to prevent their being deliverable to a higher-layer protocol.&#13;
One possible reason for discarding such a packet could be to free up buffer space.&#13;
Discontinuities in the value of this counter can occur at re-initialization of the management system,&#13;
and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Outbound packets with errors</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.2.2.1.20.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.out.errors[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <description>MIB: IF-MIB&#13;
For packet-oriented interfaces, the number of outbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character-oriented or fixed-length interfaces, the number of outbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{min(5m)}&gt;{$IF.ERRORS.WARN:"{#IFNAME}"}</expression>
                           <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                           <recovery_expression>{max(5m)}&lt;{$IF.ERRORS.WARN:"{#IFNAME}"}*0.8</recovery_expression>
                           <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: High output error rate ( &gt; {$IF.ERRORS.WARN:"{#IFNAME}"} for 5m)</name>
                           <opdata>errors out: {ITEM.LASTVALUE2}</opdata>
                           <priority>WARNING</priority>
                           <description>Recovers when below 80% of {$IF.ERRORS.WARN:"{#IFNAME}"} threshold.</description>
                           <dependencies>
                              <dependency>
                                 <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Link down</name>
                                 <expression>{$IFCONTROL:"{#IFNAME}"}=1 and {Template App PFSense SNMP:net.if.status[{#SNMPINDEX}].last()}=2</expression>
                              </dependency>
                           </dependencies>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Outbound IPv4 traffic passed</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.9["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.out.pass.v4.bps[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>bps</units>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
IPv4 bits per second passed going out on this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>8</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Outbound IPv4 packets passed</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.13["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.out.pass.v4.pps[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>pps</units>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
The number of IPv4 packets passed going out on this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Outbound IPv6 traffic passed</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.17["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.out.pass.v6.bps[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>bps</units>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
IPv6 bits per second passed going out on this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>8</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Outbound IPv6 packets passed</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.21["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.out.pass.v6.pps[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>pps</units>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
The number of IPv6 packets passed going out on this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Bits sent</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.31.1.1.1.10.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.out[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>bps</units>
                     <description>MIB: IF-MIB&#13;
The total number of octets transmitted out of the interface, including framing characters. This object is a 64-bit version of ifOutOctets.Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>8</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Rules references count</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>.1.3.6.1.4.1.12325.1.200.1.8.2.1.6["index",".1.3.6.1.4.1.12325.1.200.1.8.2.1.2","{#IFDESCR}"]</snmp_oid>
                     <key>net.if.rules.refs[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <description>MIB: BEGEMOT-PF-MIB&#13;
The number of rules referencing this interface.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Speed</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.31.1.1.1.15.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.speed[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>bps</units>
                     <description>MIB: IF-MIB&#13;
An estimate of the interface's current bandwidth in units of 1,000,000 bits per second. If this object reports a value of `n' then the speed of the interface is somewhere in the range of `n-500,000' to`n+499,999'.  For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth. For a sub-layer which has no concept of bandwidth, this object should be zero.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>1000000</params>
                        </step>
                        <step>
                           <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                           <params>1h</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Operational status</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.2.2.1.8.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.status[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <description>MIB: IF-MIB&#13;
The current operational state of the interface.&#13;
- The testing(3) state indicates that no operational packet scan be passed&#13;
- If ifAdminStatus is down(2) then ifOperStatus should be down(2)&#13;
- If ifAdminStatus is changed to up(1) then ifOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic&#13;
- It should change todormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection)&#13;
- It should remain in the down(2) state if and only if there is a fault that prevents it from going to the up(1) state&#13;
- It should remain in the notPresent(6) state if the interface has missing(typically, hardware) components.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <valuemap>
                        <name>IF-MIB::ifOperStatus</name>
                     </valuemap>
                     <preprocessing>
                        <step>
                           <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                           <params>6h</params>
                        </step>
                     </preprocessing>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{$IFCONTROL:"{#IFNAME}"}=1 and {last()}=2</expression>
                           <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Link down</name>
                           <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                           <priority>AVERAGE</priority>
                           <description>This trigger expression works as follows:&#13;
1. Can be triggered if operations status is down.&#13;
2. {$IFCONTROL:"{#IFNAME}"}=1 - user can redefine Context macro to value - 0. That marks this interface as not important. No new trigger will be fired if this interface is down.</description>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Interface type</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.2.2.1.3.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.type[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <description>MIB: IF-MIB&#13;
The type of interface.&#13;
Additional values for ifType are assigned by the Internet Assigned Numbers Authority (IANA),&#13;
through updating the syntax of the IANAifType textual convention.</description>
                     <applications>
                        <application>
                           <name>Network interfaces</name>
                        </application>
                     </applications>
                     <valuemap>
                        <name>IF-MIB::ifType</name>
                     </valuemap>
                     <preprocessing>
                        <step>
                           <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                           <params>6h</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
               </item_prototypes>
               <trigger_prototypes>
                  <trigger_prototype>
                     <expression>{Template App PFSense SNMP:net.if.speed[{#SNMPINDEX}].change()}&lt;0 and {Template App PFSense SNMP:net.if.speed[{#SNMPINDEX}].last()}&gt;0&#13;
and (&#13;
{Template App PFSense SNMP:net.if.type[{#SNMPINDEX}].last()}=6 or&#13;
{Template App PFSense SNMP:net.if.type[{#SNMPINDEX}].last()}=7 or&#13;
{Template App PFSense SNMP:net.if.type[{#SNMPINDEX}].last()}=11 or&#13;
{Template App PFSense SNMP:net.if.type[{#SNMPINDEX}].last()}=62 or&#13;
{Template App PFSense SNMP:net.if.type[{#SNMPINDEX}].last()}=69 or&#13;
{Template App PFSense SNMP:net.if.type[{#SNMPINDEX}].last()}=117&#13;
)&#13;
and&#13;
{Template App PFSense SNMP:net.if.status[{#SNMPINDEX}].last()}&lt;&gt;2</expression>
                     <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                     <recovery_expression>({Template App PFSense SNMP:net.if.speed[{#SNMPINDEX}].change()}&gt;0 and {Template App PFSense SNMP:net.if.speed[{#SNMPINDEX}].last(#2)}&gt;0) or&#13;
{Template App PFSense SNMP:net.if.status[{#SNMPINDEX}].last()}=2</recovery_expression>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Ethernet has changed to lower speed than it was before</name>
                     <opdata>Current reported speed: {ITEM.LASTVALUE1}</opdata>
                     <priority>INFO</priority>
                     <description>This Ethernet connection has transitioned down from its known maximum speed. This might be a sign of autonegotiation issues. Ack to close.</description>
                     <dependencies>
                        <dependency>
                           <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Link down</name>
                           <expression>{$IFCONTROL:"{#IFNAME}"}=1 and {Template App PFSense SNMP:net.if.status[{#SNMPINDEX}].last()}=2</expression>
                        </dependency>
                     </dependencies>
                  </trigger_prototype>
                  <trigger_prototype>
                     <expression>({Template App PFSense SNMP:net.if.in[{#SNMPINDEX}].avg(15m)}&gt;({$IF.UTIL.MAX:"{#IFNAME}"}/100)*{Template App PFSense SNMP:net.if.speed[{#SNMPINDEX}].last()}) and&#13;
{Template App PFSense SNMP:net.if.speed[{#SNMPINDEX}].last()}&gt;0</expression>
                     <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                     <recovery_expression>{Template App PFSense SNMP:net.if.in[{#SNMPINDEX}].avg(15m)}&lt;(({$IF.UTIL.MAX:"{#IFNAME}"}-3)/100)*{Template App PFSense SNMP:net.if.speed[{#SNMPINDEX}].last()}</recovery_expression>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: High inbound bandwidth usage ( &gt; {$IF.UTIL.MAX:"{#IFNAME}"}% )</name>
                     <opdata>In: {ITEM.LASTVALUE1}, speed: {ITEM.LASTVALUE2}</opdata>
                     <priority>WARNING</priority>
                     <description>The network interface utilization is close to its estimated maximum bandwidth.</description>
                     <dependencies>
                        <dependency>
                           <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Link down</name>
                           <expression>{$IFCONTROL:"{#IFNAME}"}=1 and {Template App PFSense SNMP:net.if.status[{#SNMPINDEX}].last()}=2</expression>
                        </dependency>
                     </dependencies>
                  </trigger_prototype>
                  <trigger_prototype>
                     <expression>({Template App PFSense SNMP:net.if.out[{#SNMPINDEX}].avg(15m)}&gt;({$IF.UTIL.MAX:"{#IFNAME}"}/100)*{Template App PFSense SNMP:net.if.speed[{#SNMPINDEX}].last()}) and&#13;
{Template App PFSense SNMP:net.if.speed[{#SNMPINDEX}].last()}&gt;0</expression>
                     <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                     <recovery_expression>{Template App PFSense SNMP:net.if.out[{#SNMPINDEX}].avg(15m)}&lt;(({$IF.UTIL.MAX:"{#IFNAME}"}-3)/100)*{Template App PFSense SNMP:net.if.speed[{#SNMPINDEX}].last()}</recovery_expression>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: High outbound bandwidth usage ( &gt; {$IF.UTIL.MAX:"{#IFNAME}"}% )</name>
                     <opdata>Out: {ITEM.LASTVALUE1}, speed: {ITEM.LASTVALUE2}</opdata>
                     <priority>WARNING</priority>
                     <description>The network interface utilization is close to its estimated maximum bandwidth.</description>
                     <dependencies>
                        <dependency>
                           <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Link down</name>
                           <expression>{$IFCONTROL:"{#IFNAME}"}=1 and {Template App PFSense SNMP:net.if.status[{#SNMPINDEX}].last()}=2</expression>
                        </dependency>
                     </dependencies>
                  </trigger_prototype>
               </trigger_prototypes>
               <graph_prototypes>
                  <graph_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Inbound packet filter traffic</name>
                     <graph_items>
                        <graph_item>
                           <color>1A7C11</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.in.pass.v4.bps[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>F63100</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.in.block.v4.bps[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>2774A4</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.in.pass.v6.bps[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>A54F10</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.in.block.v6.bps[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>6C59DC</color>
                           <yaxisside>RIGHT</yaxisside>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.in.pass.v4.pps[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>5</sortorder>
                           <color>FC6EA3</color>
                           <yaxisside>RIGHT</yaxisside>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.in.block.v4.pps[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>6</sortorder>
                           <color>AC8C14</color>
                           <yaxisside>RIGHT</yaxisside>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.in.pass.v6.pps[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>7</sortorder>
                           <color>611F27</color>
                           <yaxisside>RIGHT</yaxisside>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.in.block.v6.pps[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Network traffic</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>GRADIENT_LINE</drawtype>
                           <color>1A7C11</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.in[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <drawtype>BOLD_LINE</drawtype>
                           <color>2774A4</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.out[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>F63100</color>
                           <yaxisside>RIGHT</yaxisside>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.out.errors[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>A54F10</color>
                           <yaxisside>RIGHT</yaxisside>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.in.errors[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>FC6EA3</color>
                           <yaxisside>RIGHT</yaxisside>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.out.discards[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>5</sortorder>
                           <color>6C59DC</color>
                           <yaxisside>RIGHT</yaxisside>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.in.discards[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>PFSense: Interface [{#IFNAME}({#IFALIAS})]: Outbound packet filter traffic</name>
                     <graph_items>
                        <graph_item>
                           <color>1A7C11</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.out.pass.v4.bps[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>F63100</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.out.block.v4.bps[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>2774A4</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.out.pass.v6.bps[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>A54F10</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.out.block.v6.bps[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>6C59DC</color>
                           <yaxisside>RIGHT</yaxisside>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.out.pass.v4.pps[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>5</sortorder>
                           <color>FC6EA3</color>
                           <yaxisside>RIGHT</yaxisside>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.out.block.v4.pps[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>6</sortorder>
                           <color>AC8C14</color>
                           <yaxisside>RIGHT</yaxisside>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.out.pass.v6.pps[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>7</sortorder>
                           <color>611F27</color>
                           <yaxisside>RIGHT</yaxisside>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>net.if.out.block.v6.pps[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
               </graph_prototypes>
            </discovery_rule>
            <discovery_rule>
               <name>Block devices discovery</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>discovery[{#DEVNAME},1.3.6.1.4.1.2021.13.15.1.1.2]</snmp_oid>
               <key>vfs.dev.discovery</key>
               <delay>1h</delay>
               <filter>
                  <evaltype>AND</evaltype>
                  <conditions>
                     <condition>
                        <macro>{#DEVNAME}</macro>
                        <value>{$VFS.DEV.DEVNAME.MATCHES}</value>
                        <formulaid>A</formulaid>
                     </condition>
                     <condition>
                        <macro>{#DEVNAME}</macro>
                        <value>{$VFS.DEV.DEVNAME.NOT_MATCHES}</value>
                        <operator>NOT_MATCHES_REGEX</operator>
                        <formulaid>B</formulaid>
                     </condition>
                  </conditions>
               </filter>
               <description>Block devices are discovered from UCD-DISKIO-MIB::diskIOTable (http://net-snmp.sourceforge.net/docs/mibs/ucdDiskIOMIB.html#diskIOTable).</description>
               <item_prototypes>
                  <item_prototype>
                     <name>PFSense: [{#DEVNAME}]: Disk read rate</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.13.15.1.1.5.{#SNMPINDEX}</snmp_oid>
                     <key>vfs.dev.read.rate[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>!r/s</units>
                     <description>MIB: UCD-DISKIO-MIB&#13;
The number of read accesses from this device since boot.</description>
                     <applications>
                        <application>
                           <name>Storage</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: [{#DEVNAME}]: Disk utilization</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.13.15.1.1.9.{#SNMPINDEX}</snmp_oid>
                     <key>vfs.dev.util[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-DISKIO-MIB&#13;
The 1 minute average load of disk (%).</description>
                     <applications>
                        <application>
                           <name>Storage</name>
                        </application>
                     </applications>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: [{#DEVNAME}]: Disk write rate</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.13.15.1.1.6.{#SNMPINDEX}</snmp_oid>
                     <key>vfs.dev.write.rate[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>!w/s</units>
                     <description>MIB: UCD-DISKIO-MIB&#13;
The number of write accesses from this device since boot.</description>
                     <applications>
                        <application>
                           <name>Storage</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                  </item_prototype>
               </item_prototypes>
               <graph_prototypes>
                  <graph_prototype>
                     <name>PFSense: [{#DEVNAME}]: Disk read/write rates</name>
                     <graph_items>
                        <graph_item>
                           <color>1A7C11</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>vfs.dev.read.rate[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <drawtype>GRADIENT_LINE</drawtype>
                           <color>2774A4</color>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>vfs.dev.write.rate[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
               </graph_prototypes>
            </discovery_rule>
            <discovery_rule>
               <name>Mounted filesystem discovery</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>discovery[{#FSNAME},.1.3.6.1.2.1.25.3.8.1.2,{#FSTYPE},.1.3.6.1.2.1.25.3.8.1.4]</snmp_oid>
               <key>vfs.fs.discovery</key>
               <delay>1h</delay>
               <filter>
                  <evaltype>AND</evaltype>
                  <conditions>
                     <condition>
                        <macro>{#FSTYPE}</macro>
                        <value>{$VFS.FS.FSTYPE.MATCHES}</value>
                        <formulaid>A</formulaid>
                     </condition>
                     <condition>
                        <macro>{#FSTYPE}</macro>
                        <value>{$VFS.FS.FSTYPE.NOT_MATCHES}</value>
                        <operator>NOT_MATCHES_REGEX</operator>
                        <formulaid>B</formulaid>
                     </condition>
                     <condition>
                        <macro>{#FSNAME}</macro>
                        <value>{$VFS.FS.FSNAME.MATCHES}</value>
                        <formulaid>C</formulaid>
                     </condition>
                     <condition>
                        <macro>{#FSNAME}</macro>
                        <value>{$VFS.FS.FSNAME.NOT_MATCHES}</value>
                        <operator>NOT_MATCHES_REGEX</operator>
                        <formulaid>D</formulaid>
                     </condition>
                  </conditions>
               </filter>
               <description>HOST-RESOURCES-MIB::hrFS discovery with filter.</description>
               <item_prototypes>
                  <item_prototype>
                     <name>PFSense: [{#FSNAME}]: Free inodes in %</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.9.1.10["index","1.3.6.1.4.1.2021.9.1.2","{#FSNAME}"]</snmp_oid>
                     <key>vfs.fs.inode.pfree[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
If having problems collecting this item make sure access to UCD-SNMP-MIB is allowed.</description>
                     <applications>
                        <application>
                           <name>Storage</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>return (100-value);</params>
                        </step>
                     </preprocessing>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{min(5m)}&lt;{$VFS.FS.INODE.PFREE.MIN.CRIT:"{#FSNAME}"}</expression>
                           <name>PFSense: [{#FSNAME}]: Running out of free inodes (free &lt; {$VFS.FS.INODE.PFREE.MIN.CRIT:"{#FSNAME}"}%)</name>
                           <opdata>Free inodes: {ITEM.LASTVALUE1}</opdata>
                           <priority>AVERAGE</priority>
                           <description>It may become impossible to write to disk if there are no index nodes left.&#13;
As symptoms, 'No space left on device' or 'Disk is full' errors may be seen even though free space is available.</description>
                        </trigger_prototype>
                        <trigger_prototype>
                           <expression>{min(5m)}&lt;{$VFS.FS.INODE.PFREE.MIN.WARN:"{#FSNAME}"}</expression>
                           <name>PFSense: [{#FSNAME}]: Running out of free inodes (free &lt; {$VFS.FS.INODE.PFREE.MIN.WARN:"{#FSNAME}"}%)</name>
                           <opdata>Free inodes: {ITEM.LASTVALUE1}</opdata>
                           <priority>WARNING</priority>
                           <description>It may become impossible to write to disk if there are no index nodes left.&#13;
As symptoms, 'No space left on device' or 'Disk is full' errors may be seen even though free space is available.</description>
                           <dependencies>
                              <dependency>
                                 <name>PFSense: [{#FSNAME}]: Running out of free inodes (free &lt; {$VFS.FS.INODE.PFREE.MIN.CRIT:"{#FSNAME}"}%)</name>
                                 <expression>{Template App PFSense SNMP:vfs.fs.inode.pfree[{#SNMPINDEX}].min(5m)}&lt;{$VFS.FS.INODE.PFREE.MIN.CRIT:"{#FSNAME}"}</expression>
                              </dependency>
                           </dependencies>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: [{#FSNAME}]: Space utilization</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.9.1.9["index","1.3.6.1.4.1.2021.9.1.2","{#FSNAME}"]</snmp_oid>
                     <key>vfs.fs.pused[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
If having problems collecting this item make sure access to UCD-SNMP-MIB is allowed.</description>
                     <applications>
                        <application>
                           <name>Storage</name>
                        </application>
                     </applications>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: [{#FSNAME}]: Total space</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.9.1.6["index","1.3.6.1.4.1.2021.9.1.2","{#FSNAME}"]</snmp_oid>
                     <key>vfs.fs.total[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>B</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
If having problems collecting this item make sure access to UCD-SNMP-MIB is allowed.</description>
                     <applications>
                        <application>
                           <name>Storage</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>1024</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>PFSense: [{#FSNAME}]: Used space</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.9.1.8["index","1.3.6.1.4.1.2021.9.1.2","{#FSNAME}"]</snmp_oid>
                     <key>vfs.fs.used[{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>B</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
If having problems collecting this item make sure access to UCD-SNMP-MIB is allowed.</description>
                     <applications>
                        <application>
                           <name>Storage</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>1024</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
               </item_prototypes>
               <trigger_prototypes>
                  <trigger_prototype>
                     <expression>{Template App PFSense SNMP:vfs.fs.pused[{#SNMPINDEX}].last()}&gt;{$VFS.FS.PUSED.MAX.CRIT:"{#FSNAME}"} and&#13;
(({Template App PFSense SNMP:vfs.fs.total[{#SNMPINDEX}].last()}-{Template App PFSense SNMP:vfs.fs.used[{#SNMPINDEX}].last()})&lt;{$VFS.FS.FREE.MIN.CRIT:"{#FSNAME}"} or {Template App PFSense SNMP:vfs.fs.pused[{#SNMPINDEX}].timeleft(1h,,100)}&lt;1d)</expression>
                     <name>PFSense: [{#FSNAME}]: Disk space is critically low (used &gt; {$VFS.FS.PUSED.MAX.CRIT:"{#FSNAME}"}%)</name>
                     <opdata>Space used: {ITEM.LASTVALUE3} of {ITEM.LASTVALUE2} ({ITEM.LASTVALUE1})</opdata>
                     <priority>AVERAGE</priority>
                     <description>Two conditions should match: First, space utilization should be above {$VFS.FS.PUSED.MAX.CRIT:"{#FSNAME}"}.&#13;
Second condition should be one of the following:&#13;
  - The disk free space is less than {$VFS.FS.FREE.MIN.CRIT:"{#FSNAME}"}.&#13;
  - The disk will be full in less than 24 hours.</description>
                     <manual_close>YES</manual_close>
                  </trigger_prototype>
                  <trigger_prototype>
                     <expression>{Template App PFSense SNMP:vfs.fs.pused[{#SNMPINDEX}].last()}&gt;{$VFS.FS.PUSED.MAX.WARN:"{#FSNAME}"} and&#13;
(({Template App PFSense SNMP:vfs.fs.total[{#SNMPINDEX}].last()}-{Template App PFSense SNMP:vfs.fs.used[{#SNMPINDEX}].last()})&lt;{$VFS.FS.FREE.MIN.WARN:"{#FSNAME}"} or {Template App PFSense SNMP:vfs.fs.pused[{#SNMPINDEX}].timeleft(1h,,100)}&lt;1d)</expression>
                     <name>PFSense: [{#FSNAME}]: Disk space is low (used &gt; {$VFS.FS.PUSED.MAX.WARN:"{#FSNAME}"}%)</name>
                     <opdata>Space used: {ITEM.LASTVALUE3} of {ITEM.LASTVALUE2} ({ITEM.LASTVALUE1})</opdata>
                     <priority>WARNING</priority>
                     <description>Two conditions should match: First, space utilization should be above {$VFS.FS.PUSED.MAX.WARN:"{#FSNAME}"}.&#13;
Second condition should be one of the following:&#13;
  - The disk free space is less than {$VFS.FS.FREE.MIN.WARN:"{#FSNAME}"}.&#13;
  - The disk will be full in less than 24 hours.</description>
                     <manual_close>YES</manual_close>
                     <dependencies>
                        <dependency>
                           <name>PFSense: [{#FSNAME}]: Disk space is critically low (used &gt; {$VFS.FS.PUSED.MAX.CRIT:"{#FSNAME}"}%)</name>
                           <expression>{Template App PFSense SNMP:vfs.fs.pused[{#SNMPINDEX}].last()}&gt;{$VFS.FS.PUSED.MAX.CRIT:"{#FSNAME}"} and&#13;
(({Template App PFSense SNMP:vfs.fs.total[{#SNMPINDEX}].last()}-{Template App PFSense SNMP:vfs.fs.used[{#SNMPINDEX}].last()})&lt;{$VFS.FS.FREE.MIN.CRIT:"{#FSNAME}"} or {Template App PFSense SNMP:vfs.fs.pused[{#SNMPINDEX}].timeleft(1h,,100)}&lt;1d)</expression>
                        </dependency>
                     </dependencies>
                  </trigger_prototype>
               </trigger_prototypes>
               <graph_prototypes>
                  <graph_prototype>
                     <name>PFSense: [{#FSNAME}]: Disk space usage</name>
                     <width>600</width>
                     <height>340</height>
                     <type>PIE</type>
                     <show_3d>YES</show_3d>
                     <graph_items>
                        <graph_item>
                           <color>969696</color>
                           <calc_fnc>LAST</calc_fnc>
                           <type>GRAPH_SUM</type>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>vfs.fs.total[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <calc_fnc>LAST</calc_fnc>
                           <item>
                              <host>Template App PFSense SNMP</host>
                              <key>vfs.fs.used[{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
               </graph_prototypes>
            </discovery_rule>
         </discovery_rules>
         <macros>
            <macro>
               <macro>{$CPU.UTIL.CRIT}</macro>
               <value>90</value>
               <description>Threshold of CPU utilization for warning trigger in %.</description>
            </macro>
            <macro>
               <macro>{$ICMP_LOSS_WARN}</macro>
               <value>20</value>
               <description>Threshold of ICMP packets loss for warning trigger in %.</description>
            </macro>
            <macro>
               <macro>{$ICMP_RESPONSE_TIME_WARN}</macro>
               <value>0.15</value>
               <description>Threshold of average ICMP response time for warning trigger in seconds.</description>
            </macro>
            <macro>
               <macro>{$IF.ERRORS.WARN}</macro>
               <value>2</value>
               <description>Threshold of error packets rate for warning trigger. Can be used with interface name as context.</description>
            </macro>
            <macro>
               <macro>{$IF.UTIL.MAX}</macro>
               <value>90</value>
               <description>Threshold of interface bandwidth utilization for warning trigger in %. Can be used with interface name as context.</description>
            </macro>
            <macro>
               <macro>{$IFCONTROL}</macro>
               <value>1</value>
               <description>Macro for operational state of the interface for link down trigger. Can be used with interface name as context.</description>
            </macro>
            <macro>
               <macro>{$LOAD_AVG_PER_CPU.MAX.WARN}</macro>
               <value>1.5</value>
               <description>Load per CPU considered sustainable. Tune if needed.</description>
            </macro>
            <macro>
               <macro>{$MEMORY.AVAILABLE.MIN}</macro>
               <value>20M</value>
               <description>Threshold of available memory for trigger in bytes.</description>
            </macro>
            <macro>
               <macro>{$MEMORY.UTIL.MAX}</macro>
               <value>90</value>
               <description>Threshold of memory utilization for trigger in %</description>
            </macro>
            <macro>
               <macro>{$NET.IF.IFADMINSTATUS.MATCHES}</macro>
               <value>^.*</value>
               <description>This macro is used in filters of network interfaces discovery rule.</description>
            </macro>
            <macro>
               <macro>{$NET.IF.IFADMINSTATUS.NOT_MATCHES}</macro>
               <value>^2$</value>
               <description>Ignore down(2) administrative status</description>
            </macro>
            <macro>
               <macro>{$NET.IF.IFALIAS.MATCHES}</macro>
               <value>.*</value>
               <description>This macro is used in filters of network interfaces discovery rule.</description>
            </macro>
            <macro>
               <macro>{$NET.IF.IFALIAS.NOT_MATCHES}</macro>
               <value>CHANGE_IF_NEEDED</value>
               <description>This macro is used in filters of network interfaces discovery rule.</description>
            </macro>
            <macro>
               <macro>{$NET.IF.IFDESCR.MATCHES}</macro>
               <value>.*</value>
               <description>This macro used in filters of network interfaces discovery rule.</description>
            </macro>
            <macro>
               <macro>{$NET.IF.IFDESCR.NOT_MATCHES}</macro>
               <value>CHANGE_IF_NEEDED</value>
               <description>This macro used in filters of network interfaces discovery rule.</description>
            </macro>
            <macro>
               <macro>{$NET.IF.IFNAME.MATCHES}</macro>
               <value>^em[0-9]+$</value>
               <description>This macro used in filters of network interfaces discovery rule.</description>
            </macro>
            <macro>
               <macro>{$NET.IF.IFNAME.NOT_MATCHES}</macro>
               <value>^$</value>
               <description>This macro used in filters of network interfaces discovery rule.</description>
            </macro>
            <macro>
               <macro>{$NET.IF.IFOPERSTATUS.MATCHES}</macro>
               <value>^.*$</value>
               <description>This macro used in filters of network interfaces discovery rule.</description>
            </macro>
            <macro>
               <macro>{$NET.IF.IFOPERSTATUS.NOT_MATCHES}</macro>
               <value>^6$</value>
               <description>Ignore notPresent(6)</description>
            </macro>
            <macro>
               <macro>{$NET.IF.IFTYPE.MATCHES}</macro>
               <value>.*</value>
               <description>This macro used in filters of network interfaces discovery rule.</description>
            </macro>
            <macro>
               <macro>{$NET.IF.IFTYPE.NOT_MATCHES}</macro>
               <value>CHANGE_IF_NEEDED</value>
               <description>This macro used in filters of network interfaces discovery rule.</description>
            </macro>
            <macro>
               <macro>{$SNMP.TIMEOUT}</macro>
               <value>5m</value>
               <description>The time interval for SNMP availability trigger.</description>
            </macro>
            <macro>
               <macro>{$SOURCE.TRACKING.TABLE.UTIL.MAX}</macro>
               <value>90</value>
               <description>Threshold of source tracking table utilization trigger in %.</description>
            </macro>
            <macro>
               <macro>{$STATE.TABLE.UTIL.MAX}</macro>
               <value>90</value>
               <description>Threshold of state table utilization trigger in %.</description>
            </macro>
            <macro>
               <macro>{$SWAP.PFREE.MIN.WARN}</macro>
               <value>50</value>
               <description>Threshold of free swap space for warning trigger in %.</description>
            </macro>
            <macro>
               <macro>{$VFS.DEV.DEVNAME.MATCHES}</macro>
               <value>.+</value>
               <description>This macro is used in block devices discovery. Can be overridden on the host or linked template level</description>
            </macro>
            <macro>
               <macro>{$VFS.DEV.DEVNAME.NOT_MATCHES}</macro>
               <value>^(loop[0-9]*|sd[a-z][0-9]+|nbd[0-9]+|sr[0-9]+|fd[0-9]+|dm-[0-9]+|ram[0-9]+|ploop[a-z0-9]+|md[0-9]*|hcp[0-9]*|cd[0-9]*|pass[0-9]*|zram[0-9]*)</value>
               <description>This macro is used in block devices discovery. Can be overridden on the host or linked template level</description>
            </macro>
            <macro>
               <macro>{$VFS.FS.FREE.MIN.CRIT}</macro>
               <value>5G</value>
               <description>The critical threshold of the filesystem utilization.</description>
            </macro>
            <macro>
               <macro>{$VFS.FS.FREE.MIN.WARN}</macro>
               <value>10G</value>
               <description>The warning threshold of the filesystem utilization.</description>
            </macro>
            <macro>
               <macro>{$VFS.FS.FSNAME.MATCHES}</macro>
               <value>.+</value>
               <description>This macro is used in filesystems discovery. Can be overridden on the host or linked template level</description>
            </macro>
            <macro>
               <macro>{$VFS.FS.FSNAME.NOT_MATCHES}</macro>
               <value>^(/dev|/sys|/run|/var/run|/proc|.+/shm$)</value>
               <description>This macro is used in filesystems discovery. Can be overridden on the host or linked template level</description>
            </macro>
            <macro>
               <macro>{$VFS.FS.FSTYPE.MATCHES}</macro>
               <value>.*(9.3|hrFSBerkeleyFFS)$</value>
               <description>This macro is used in filesystems discovery. Can be overridden on the host or linked template level</description>
            </macro>
            <macro>
               <macro>{$VFS.FS.FSTYPE.NOT_MATCHES}</macro>
               <value>^\s$</value>
               <description>This macro is used in filesystems discovery. Can be overridden on the host or linked template level</description>
            </macro>
            <macro>
               <macro>{$VFS.FS.INODE.PFREE.MIN.CRIT}</macro>
               <value>10</value>
               <description>Threshold of inodes usage for average severity trigger in %. Can be used with filesystem name as context.</description>
            </macro>
            <macro>
               <macro>{$VFS.FS.INODE.PFREE.MIN.WARN}</macro>
               <value>20</value>
               <description>Threshold of inodes usage for warning trigger in %. Can be used with filesystem name as context.</description>
            </macro>
            <macro>
               <macro>{$VFS.FS.PUSED.MAX.CRIT}</macro>
               <value>90</value>
               <description>Threshold of filesystem used space for average severity trigger in %. Can be used with filesystem name as context.</description>
            </macro>
            <macro>
               <macro>{$VFS.FS.PUSED.MAX.WARN}</macro>
               <value>80</value>
               <description>Threshold of used filesystem space for warning trigger in %. Can be used with filesystem name as context.</description>
            </macro>
         </macros>
      </template>
   </templates>
   <triggers>
      <trigger>
         <expression>{Template App PFSense SNMP:system.swap.pfree.min(5m)}&lt;{$SWAP.PFREE.MIN.WARN} and {Template App PFSense SNMP:system.swap.total.last()}&gt;0</expression>
         <name>PFSense: High swap space usage (less than {$SWAP.PFREE.MIN.WARN}% free)</name>
         <opdata>Free: {ITEM.LASTVALUE1}, total: {ITEM.LASTVALUE2}</opdata>
         <priority>WARNING</priority>
         <description>This trigger is ignored, if there is no swap configured.</description>
         <dependencies>
            <dependency>
               <name>PFSense: High memory utilization (&gt;{$MEMORY.UTIL.MAX}% for 5m)</name>
               <expression>{Template App PFSense SNMP:vm.memory.util.min(5m)}&gt;{$MEMORY.UTIL.MAX}</expression>
            </dependency>
            <dependency>
               <name>PFSense: Lack of available memory (&lt;{$MEMORY.AVAILABLE.MIN} of {ITEM.VALUE2})</name>
               <expression>{Template App PFSense SNMP:vm.memory.available.min(5m)}&lt;{$MEMORY.AVAILABLE.MIN} and {Template App PFSense SNMP:vm.memory.total.last()}&gt;0</expression>
            </dependency>
         </dependencies>
      </trigger>
      <trigger>
         <expression>{Template App PFSense SNMP:vm.memory.available.min(5m)}&lt;{$MEMORY.AVAILABLE.MIN} and {Template App PFSense SNMP:vm.memory.total.last()}&gt;0</expression>
         <name>PFSense: Lack of available memory (&lt;{$MEMORY.AVAILABLE.MIN} of {ITEM.VALUE2})</name>
         <opdata>Available: {ITEM.LASTVALUE1}, total: {ITEM.LASTVALUE2}</opdata>
         <priority>AVERAGE</priority>
         <description>The system is running out of memory</description>
      </trigger>
      <trigger>
         <expression>{Template App PFSense SNMP:system.cpu.load.avg1.min(5m)}/{Template App PFSense SNMP:system.cpu.num.last()}&gt;{$LOAD_AVG_PER_CPU.MAX.WARN}&#13;
and {Template App PFSense SNMP:system.cpu.load.avg5.last()}&gt;0&#13;
and {Template App PFSense SNMP:system.cpu.load.avg15.last()}&gt;0</expression>
         <name>PFSense: Load average is too high (per CPU load over {$LOAD_AVG_PER_CPU.MAX.WARN} for 5m)</name>
         <opdata>Load averages(1m 5m 15m): ({ITEM.LASTVALUE1} {ITEM.LASTVALUE3} {ITEM.LASTVALUE4}), # of CPUs: {ITEM.LASTVALUE2}</opdata>
         <priority>AVERAGE</priority>
         <description>Per CPU load average is too high. Your system may be slow to respond.</description>
      </trigger>
   </triggers>
   <graphs>
      <graph>
         <name>PFSense: CPU jumps</name>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>system.cpu.switches</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>system.cpu.intr</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>PFSense: Memory usage</name>
         <ymin_type_1>FIXED</ymin_type_1>
         <graph_items>
            <graph_item>
               <drawtype>BOLD_LINE</drawtype>
               <color>1A7C11</color>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>vm.memory.total</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <drawtype>GRADIENT_LINE</drawtype>
               <color>2774A4</color>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>vm.memory.available</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>PFSense: Memory utilization</name>
         <ymin_type_1>FIXED</ymin_type_1>
         <ymax_type_1>FIXED</ymax_type_1>
         <graph_items>
            <graph_item>
               <drawtype>GRADIENT_LINE</drawtype>
               <color>1A7C11</color>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>vm.memory.util</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>PFSense: Packet filter reason codes</name>
         <type>STACKED</type>
         <ymin_type_1>FIXED</ymin_type_1>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>pfsense.packets.match</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>pfsense.packets.bad.offset</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>2</sortorder>
               <color>F63100</color>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>pfsense.packets.fragment</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>3</sortorder>
               <color>A54F10</color>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>pfsense.packets.short</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>4</sortorder>
               <color>FC6EA3</color>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>pfsense.packets.normalize</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>5</sortorder>
               <color>6C59DC</color>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>pfsense.packets.mem.drop</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>PFSense: Swap usage</name>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>system.swap.free</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>system.swap.total</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>PFSense: System load</name>
         <ymin_type_1>FIXED</ymin_type_1>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>system.cpu.load.avg1</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>system.cpu.load.avg5</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>2</sortorder>
               <color>F63100</color>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>system.cpu.load.avg15</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>3</sortorder>
               <color>A54F10</color>
               <yaxisside>RIGHT</yaxisside>
               <item>
                  <host>Template App PFSense SNMP</host>
                  <key>system.cpu.num</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
   </graphs>
   <value_maps>
      <value_map>
         <name>IF-MIB::ifOperStatus</name>
         <mappings>
            <mapping>
               <value>1</value>
               <newvalue>up</newvalue>
            </mapping>
            <mapping>
               <value>2</value>
               <newvalue>down</newvalue>
            </mapping>
            <mapping>
               <value>3</value>
               <newvalue>testing</newvalue>
            </mapping>
            <mapping>
               <value>4</value>
               <newvalue>unknown</newvalue>
            </mapping>
            <mapping>
               <value>5</value>
               <newvalue>dormant</newvalue>
            </mapping>
            <mapping>
               <value>6</value>
               <newvalue>notPresent</newvalue>
            </mapping>
            <mapping>
               <value>7</value>
               <newvalue>lowerLayerDown</newvalue>
            </mapping>
         </mappings>
      </value_map>
      <value_map>
         <name>IF-MIB::ifType</name>
         <mappings>
            <mapping>
               <value>1</value>
               <newvalue>other</newvalue>
            </mapping>
            <mapping>
               <value>2</value>
               <newvalue>regular1822</newvalue>
            </mapping>
            <mapping>
               <value>3</value>
               <newvalue>hdh1822</newvalue>
            </mapping>
            <mapping>
               <value>4</value>
               <newvalue>ddnX25</newvalue>
            </mapping>
            <mapping>
               <value>5</value>
               <newvalue>rfc877x25</newvalue>
            </mapping>
            <mapping>
               <value>6</value>
               <newvalue>ethernetCsmacd</newvalue>
            </mapping>
            <mapping>
               <value>7</value>
               <newvalue>iso88023Csmacd</newvalue>
            </mapping>
            <mapping>
               <value>8</value>
               <newvalue>iso88024TokenBus</newvalue>
            </mapping>
            <mapping>
               <value>9</value>
               <newvalue>iso88025TokenRing</newvalue>
            </mapping>
            <mapping>
               <value>10</value>
               <newvalue>iso88026Man</newvalue>
            </mapping>
            <mapping>
               <value>11</value>
               <newvalue>starLan</newvalue>
            </mapping>
            <mapping>
               <value>12</value>
               <newvalue>proteon10Mbit</newvalue>
            </mapping>
            <mapping>
               <value>13</value>
               <newvalue>proteon80Mbit</newvalue>
            </mapping>
            <mapping>
               <value>14</value>
               <newvalue>hyperchannel</newvalue>
            </mapping>
            <mapping>
               <value>15</value>
               <newvalue>fddi</newvalue>
            </mapping>
            <mapping>
               <value>16</value>
               <newvalue>lapb</newvalue>
            </mapping>
            <mapping>
               <value>17</value>
               <newvalue>sdlc</newvalue>
            </mapping>
            <mapping>
               <value>18</value>
               <newvalue>ds1</newvalue>
            </mapping>
            <mapping>
               <value>19</value>
               <newvalue>e1</newvalue>
            </mapping>
            <mapping>
               <value>20</value>
               <newvalue>basicISDN</newvalue>
            </mapping>
            <mapping>
               <value>21</value>
               <newvalue>primaryISDN</newvalue>
            </mapping>
            <mapping>
               <value>22</value>
               <newvalue>propPointToPointSerial</newvalue>
            </mapping>
            <mapping>
               <value>23</value>
               <newvalue>ppp</newvalue>
            </mapping>
            <mapping>
               <value>24</value>
               <newvalue>softwareLoopback</newvalue>
            </mapping>
            <mapping>
               <value>25</value>
               <newvalue>eon</newvalue>
            </mapping>
            <mapping>
               <value>26</value>
               <newvalue>ethernet3Mbit</newvalue>
            </mapping>
            <mapping>
               <value>27</value>
               <newvalue>nsip</newvalue>
            </mapping>
            <mapping>
               <value>28</value>
               <newvalue>slip</newvalue>
            </mapping>
            <mapping>
               <value>29</value>
               <newvalue>ultra</newvalue>
            </mapping>
            <mapping>
               <value>30</value>
               <newvalue>ds3</newvalue>
            </mapping>
            <mapping>
               <value>31</value>
               <newvalue>sip</newvalue>
            </mapping>
            <mapping>
               <value>32</value>
               <newvalue>frameRelay</newvalue>
            </mapping>
            <mapping>
               <value>33</value>
               <newvalue>rs232</newvalue>
            </mapping>
            <mapping>
               <value>34</value>
               <newvalue>para</newvalue>
            </mapping>
            <mapping>
               <value>35</value>
               <newvalue>arcnet</newvalue>
            </mapping>
            <mapping>
               <value>36</value>
               <newvalue>arcnetPlus</newvalue>
            </mapping>
            <mapping>
               <value>37</value>
               <newvalue>atm</newvalue>
            </mapping>
            <mapping>
               <value>38</value>
               <newvalue>miox25</newvalue>
            </mapping>
            <mapping>
               <value>39</value>
               <newvalue>sonet</newvalue>
            </mapping>
            <mapping>
               <value>40</value>
               <newvalue>x25ple</newvalue>
            </mapping>
            <mapping>
               <value>41</value>
               <newvalue>iso88022llc</newvalue>
            </mapping>
            <mapping>
               <value>42</value>
               <newvalue>localTalk</newvalue>
            </mapping>
            <mapping>
               <value>43</value>
               <newvalue>smdsDxi</newvalue>
            </mapping>
            <mapping>
               <value>44</value>
               <newvalue>frameRelayService</newvalue>
            </mapping>
            <mapping>
               <value>45</value>
               <newvalue>v35</newvalue>
            </mapping>
            <mapping>
               <value>46</value>
               <newvalue>hssi</newvalue>
            </mapping>
            <mapping>
               <value>47</value>
               <newvalue>hippi</newvalue>
            </mapping>
            <mapping>
               <value>48</value>
               <newvalue>modem</newvalue>
            </mapping>
            <mapping>
               <value>49</value>
               <newvalue>aal5</newvalue>
            </mapping>
            <mapping>
               <value>50</value>
               <newvalue>sonetPath</newvalue>
            </mapping>
            <mapping>
               <value>51</value>
               <newvalue>sonetVT</newvalue>
            </mapping>
            <mapping>
               <value>52</value>
               <newvalue>smdsIcip</newvalue>
            </mapping>
            <mapping>
               <value>53</value>
               <newvalue>propVirtual</newvalue>
            </mapping>
            <mapping>
               <value>54</value>
               <newvalue>propMultiplexor</newvalue>
            </mapping>
            <mapping>
               <value>55</value>
               <newvalue>ieee80212</newvalue>
            </mapping>
            <mapping>
               <value>56</value>
               <newvalue>fibreChannel</newvalue>
            </mapping>
            <mapping>
               <value>57</value>
               <newvalue>hippiInterface</newvalue>
            </mapping>
            <mapping>
               <value>58</value>
               <newvalue>frameRelayInterconnect</newvalue>
            </mapping>
            <mapping>
               <value>59</value>
               <newvalue>aflane8023</newvalue>
            </mapping>
            <mapping>
               <value>60</value>
               <newvalue>aflane8025</newvalue>
            </mapping>
            <mapping>
               <value>61</value>
               <newvalue>cctEmul</newvalue>
            </mapping>
            <mapping>
               <value>62</value>
               <newvalue>fastEther</newvalue>
            </mapping>
            <mapping>
               <value>63</value>
               <newvalue>isdn</newvalue>
            </mapping>
            <mapping>
               <value>64</value>
               <newvalue>v11</newvalue>
            </mapping>
            <mapping>
               <value>65</value>
               <newvalue>v36</newvalue>
            </mapping>
            <mapping>
               <value>66</value>
               <newvalue>g703at64k</newvalue>
            </mapping>
            <mapping>
               <value>67</value>
               <newvalue>g703at2mb</newvalue>
            </mapping>
            <mapping>
               <value>68</value>
               <newvalue>qllc</newvalue>
            </mapping>
            <mapping>
               <value>69</value>
               <newvalue>fastEtherFX</newvalue>
            </mapping>
            <mapping>
               <value>70</value>
               <newvalue>channel</newvalue>
            </mapping>
            <mapping>
               <value>71</value>
               <newvalue>ieee80211</newvalue>
            </mapping>
            <mapping>
               <value>72</value>
               <newvalue>ibm370parChan</newvalue>
            </mapping>
            <mapping>
               <value>73</value>
               <newvalue>escon</newvalue>
            </mapping>
            <mapping>
               <value>74</value>
               <newvalue>dlsw</newvalue>
            </mapping>
            <mapping>
               <value>75</value>
               <newvalue>isdns</newvalue>
            </mapping>
            <mapping>
               <value>76</value>
               <newvalue>isdnu</newvalue>
            </mapping>
            <mapping>
               <value>77</value>
               <newvalue>lapd</newvalue>
            </mapping>
            <mapping>
               <value>78</value>
               <newvalue>ipSwitch</newvalue>
            </mapping>
            <mapping>
               <value>79</value>
               <newvalue>rsrb</newvalue>
            </mapping>
            <mapping>
               <value>80</value>
               <newvalue>atmLogical</newvalue>
            </mapping>
            <mapping>
               <value>81</value>
               <newvalue>ds0</newvalue>
            </mapping>
            <mapping>
               <value>82</value>
               <newvalue>ds0Bundle</newvalue>
            </mapping>
            <mapping>
               <value>83</value>
               <newvalue>bsc</newvalue>
            </mapping>
            <mapping>
               <value>84</value>
               <newvalue>async</newvalue>
            </mapping>
            <mapping>
               <value>85</value>
               <newvalue>cnr</newvalue>
            </mapping>
            <mapping>
               <value>86</value>
               <newvalue>iso88025Dtr</newvalue>
            </mapping>
            <mapping>
               <value>87</value>
               <newvalue>eplrs</newvalue>
            </mapping>
            <mapping>
               <value>88</value>
               <newvalue>arap</newvalue>
            </mapping>
            <mapping>
               <value>89</value>
               <newvalue>propCnls</newvalue>
            </mapping>
            <mapping>
               <value>90</value>
               <newvalue>hostPad</newvalue>
            </mapping>
            <mapping>
               <value>91</value>
               <newvalue>termPad</newvalue>
            </mapping>
            <mapping>
               <value>92</value>
               <newvalue>frameRelayMPI</newvalue>
            </mapping>
            <mapping>
               <value>93</value>
               <newvalue>x213</newvalue>
            </mapping>
            <mapping>
               <value>94</value>
               <newvalue>adsl</newvalue>
            </mapping>
            <mapping>
               <value>95</value>
               <newvalue>radsl</newvalue>
            </mapping>
            <mapping>
               <value>96</value>
               <newvalue>sdsl</newvalue>
            </mapping>
            <mapping>
               <value>97</value>
               <newvalue>vdsl</newvalue>
            </mapping>
            <mapping>
               <value>98</value>
               <newvalue>iso88025CRFPInt</newvalue>
            </mapping>
            <mapping>
               <value>99</value>
               <newvalue>myrinet</newvalue>
            </mapping>
            <mapping>
               <value>100</value>
               <newvalue>voiceEM</newvalue>
            </mapping>
            <mapping>
               <value>101</value>
               <newvalue>voiceFXO</newvalue>
            </mapping>
            <mapping>
               <value>102</value>
               <newvalue>voiceFXS</newvalue>
            </mapping>
            <mapping>
               <value>103</value>
               <newvalue>voiceEncap</newvalue>
            </mapping>
            <mapping>
               <value>104</value>
               <newvalue>voiceOverIp</newvalue>
            </mapping>
            <mapping>
               <value>105</value>
               <newvalue>atmDxi</newvalue>
            </mapping>
            <mapping>
               <value>106</value>
               <newvalue>atmFuni</newvalue>
            </mapping>
            <mapping>
               <value>107</value>
               <newvalue>atmIma</newvalue>
            </mapping>
            <mapping>
               <value>108</value>
               <newvalue>pppMultilinkBundle</newvalue>
            </mapping>
            <mapping>
               <value>109</value>
               <newvalue>ipOverCdlc</newvalue>
            </mapping>
            <mapping>
               <value>110</value>
               <newvalue>ipOverClaw</newvalue>
            </mapping>
            <mapping>
               <value>111</value>
               <newvalue>stackToStack</newvalue>
            </mapping>
            <mapping>
               <value>112</value>
               <newvalue>virtualIpAddress</newvalue>
            </mapping>
            <mapping>
               <value>113</value>
               <newvalue>mpc</newvalue>
            </mapping>
            <mapping>
               <value>114</value>
               <newvalue>ipOverAtm</newvalue>
            </mapping>
            <mapping>
               <value>115</value>
               <newvalue>iso88025Fiber</newvalue>
            </mapping>
            <mapping>
               <value>116</value>
               <newvalue>tdlc</newvalue>
            </mapping>
            <mapping>
               <value>117</value>
               <newvalue>gigabitEthernet</newvalue>
            </mapping>
            <mapping>
               <value>118</value>
               <newvalue>hdlc</newvalue>
            </mapping>
            <mapping>
               <value>119</value>
               <newvalue>lapf</newvalue>
            </mapping>
            <mapping>
               <value>120</value>
               <newvalue>v37</newvalue>
            </mapping>
            <mapping>
               <value>121</value>
               <newvalue>x25mlp</newvalue>
            </mapping>
            <mapping>
               <value>122</value>
               <newvalue>x25huntGroup</newvalue>
            </mapping>
            <mapping>
               <value>123</value>
               <newvalue>trasnpHdlc</newvalue>
            </mapping>
            <mapping>
               <value>124</value>
               <newvalue>interleave</newvalue>
            </mapping>
            <mapping>
               <value>125</value>
               <newvalue>fast</newvalue>
            </mapping>
            <mapping>
               <value>126</value>
               <newvalue>ip</newvalue>
            </mapping>
            <mapping>
               <value>127</value>
               <newvalue>docsCableMaclayer</newvalue>
            </mapping>
            <mapping>
               <value>128</value>
               <newvalue>docsCableDownstream</newvalue>
            </mapping>
            <mapping>
               <value>129</value>
               <newvalue>docsCableUpstream</newvalue>
            </mapping>
            <mapping>
               <value>130</value>
               <newvalue>a12MppSwitch</newvalue>
            </mapping>
            <mapping>
               <value>131</value>
               <newvalue>tunnel</newvalue>
            </mapping>
            <mapping>
               <value>132</value>
               <newvalue>coffee</newvalue>
            </mapping>
            <mapping>
               <value>133</value>
               <newvalue>ces</newvalue>
            </mapping>
            <mapping>
               <value>134</value>
               <newvalue>atmSubInterface</newvalue>
            </mapping>
            <mapping>
               <value>135</value>
               <newvalue>l2vlan</newvalue>
            </mapping>
            <mapping>
               <value>136</value>
               <newvalue>l3ipvlan</newvalue>
            </mapping>
            <mapping>
               <value>137</value>
               <newvalue>l3ipxvlan</newvalue>
            </mapping>
            <mapping>
               <value>138</value>
               <newvalue>digitalPowerline</newvalue>
            </mapping>
            <mapping>
               <value>139</value>
               <newvalue>mediaMailOverIp</newvalue>
            </mapping>
            <mapping>
               <value>140</value>
               <newvalue>dtm</newvalue>
            </mapping>
            <mapping>
               <value>141</value>
               <newvalue>dcn</newvalue>
            </mapping>
            <mapping>
               <value>142</value>
               <newvalue>ipForward</newvalue>
            </mapping>
            <mapping>
               <value>143</value>
               <newvalue>msdsl</newvalue>
            </mapping>
            <mapping>
               <value>144</value>
               <newvalue>ieee1394</newvalue>
            </mapping>
            <mapping>
               <value>145</value>
               <newvalue>if-gsn</newvalue>
            </mapping>
            <mapping>
               <value>146</value>
               <newvalue>dvbRccMacLayer</newvalue>
            </mapping>
            <mapping>
               <value>147</value>
               <newvalue>dvbRccDownstream</newvalue>
            </mapping>
            <mapping>
               <value>148</value>
               <newvalue>dvbRccUpstream</newvalue>
            </mapping>
            <mapping>
               <value>149</value>
               <newvalue>atmVirtual</newvalue>
            </mapping>
            <mapping>
               <value>150</value>
               <newvalue>mplsTunnel</newvalue>
            </mapping>
            <mapping>
               <value>151</value>
               <newvalue>srp</newvalue>
            </mapping>
            <mapping>
               <value>152</value>
               <newvalue>voiceOverAtm</newvalue>
            </mapping>
            <mapping>
               <value>153</value>
               <newvalue>voiceOverFrameRelay</newvalue>
            </mapping>
            <mapping>
               <value>154</value>
               <newvalue>idsl</newvalue>
            </mapping>
            <mapping>
               <value>155</value>
               <newvalue>compositeLink</newvalue>
            </mapping>
            <mapping>
               <value>156</value>
               <newvalue>ss7SigLink</newvalue>
            </mapping>
            <mapping>
               <value>157</value>
               <newvalue>propWirelessP2P</newvalue>
            </mapping>
            <mapping>
               <value>158</value>
               <newvalue>frForward</newvalue>
            </mapping>
            <mapping>
               <value>159</value>
               <newvalue>rfc1483</newvalue>
            </mapping>
            <mapping>
               <value>160</value>
               <newvalue>usb</newvalue>
            </mapping>
            <mapping>
               <value>161</value>
               <newvalue>ieee8023adLag</newvalue>
            </mapping>
            <mapping>
               <value>162</value>
               <newvalue>bgppolicyaccounting</newvalue>
            </mapping>
            <mapping>
               <value>163</value>
               <newvalue>frf16MfrBundle</newvalue>
            </mapping>
            <mapping>
               <value>164</value>
               <newvalue>h323Gatekeeper</newvalue>
            </mapping>
            <mapping>
               <value>165</value>
               <newvalue>h323Proxy</newvalue>
            </mapping>
            <mapping>
               <value>166</value>
               <newvalue>mpls</newvalue>
            </mapping>
            <mapping>
               <value>167</value>
               <newvalue>mfSigLink</newvalue>
            </mapping>
            <mapping>
               <value>168</value>
               <newvalue>hdsl2</newvalue>
            </mapping>
            <mapping>
               <value>169</value>
               <newvalue>shdsl</newvalue>
            </mapping>
            <mapping>
               <value>170</value>
               <newvalue>ds1FDL</newvalue>
            </mapping>
            <mapping>
               <value>171</value>
               <newvalue>pos</newvalue>
            </mapping>
            <mapping>
               <value>172</value>
               <newvalue>dvbAsiIn</newvalue>
            </mapping>
            <mapping>
               <value>173</value>
               <newvalue>dvbAsiOut</newvalue>
            </mapping>
            <mapping>
               <value>174</value>
               <newvalue>plc</newvalue>
            </mapping>
            <mapping>
               <value>175</value>
               <newvalue>nfas</newvalue>
            </mapping>
            <mapping>
               <value>176</value>
               <newvalue>tr008</newvalue>
            </mapping>
            <mapping>
               <value>177</value>
               <newvalue>gr303RDT</newvalue>
            </mapping>
            <mapping>
               <value>178</value>
               <newvalue>gr303IDT</newvalue>
            </mapping>
            <mapping>
               <value>179</value>
               <newvalue>isup</newvalue>
            </mapping>
            <mapping>
               <value>180</value>
               <newvalue>propDocsWirelessMaclayer</newvalue>
            </mapping>
            <mapping>
               <value>181</value>
               <newvalue>propDocsWirelessDownstream</newvalue>
            </mapping>
            <mapping>
               <value>182</value>
               <newvalue>propDocsWirelessUpstream</newvalue>
            </mapping>
            <mapping>
               <value>183</value>
               <newvalue>hiperlan2</newvalue>
            </mapping>
            <mapping>
               <value>184</value>
               <newvalue>propBWAp2Mp</newvalue>
            </mapping>
            <mapping>
               <value>185</value>
               <newvalue>sonetOverheadChannel</newvalue>
            </mapping>
            <mapping>
               <value>186</value>
               <newvalue>digitalWrapperOverheadChannel</newvalue>
            </mapping>
            <mapping>
               <value>187</value>
               <newvalue>aal2</newvalue>
            </mapping>
            <mapping>
               <value>188</value>
               <newvalue>radioMAC</newvalue>
            </mapping>
            <mapping>
               <value>189</value>
               <newvalue>atmRadio</newvalue>
            </mapping>
            <mapping>
               <value>190</value>
               <newvalue>imt</newvalue>
            </mapping>
            <mapping>
               <value>191</value>
               <newvalue>mvl</newvalue>
            </mapping>
            <mapping>
               <value>192</value>
               <newvalue>reachDSL</newvalue>
            </mapping>
            <mapping>
               <value>193</value>
               <newvalue>frDlciEndPt</newvalue>
            </mapping>
            <mapping>
               <value>194</value>
               <newvalue>atmVciEndPt</newvalue>
            </mapping>
            <mapping>
               <value>195</value>
               <newvalue>opticalChannel</newvalue>
            </mapping>
            <mapping>
               <value>196</value>
               <newvalue>opticalTransport</newvalue>
            </mapping>
            <mapping>
               <value>197</value>
               <newvalue>propAtm</newvalue>
            </mapping>
            <mapping>
               <value>198</value>
               <newvalue>voiceOverCable</newvalue>
            </mapping>
            <mapping>
               <value>199</value>
               <newvalue>infiniband</newvalue>
            </mapping>
            <mapping>
               <value>200</value>
               <newvalue>teLink</newvalue>
            </mapping>
            <mapping>
               <value>201</value>
               <newvalue>q2931</newvalue>
            </mapping>
            <mapping>
               <value>202</value>
               <newvalue>virtualTg</newvalue>
            </mapping>
            <mapping>
               <value>203</value>
               <newvalue>sipTg</newvalue>
            </mapping>
            <mapping>
               <value>204</value>
               <newvalue>sipSig</newvalue>
            </mapping>
            <mapping>
               <value>205</value>
               <newvalue>docsCableUpstreamChannel</newvalue>
            </mapping>
            <mapping>
               <value>206</value>
               <newvalue>econet</newvalue>
            </mapping>
            <mapping>
               <value>207</value>
               <newvalue>pon155</newvalue>
            </mapping>
            <mapping>
               <value>208</value>
               <newvalue>pon622</newvalue>
            </mapping>
            <mapping>
               <value>209</value>
               <newvalue>bridge</newvalue>
            </mapping>
            <mapping>
               <value>210</value>
               <newvalue>linegroup</newvalue>
            </mapping>
            <mapping>
               <value>211</value>
               <newvalue>voiceEMFGD</newvalue>
            </mapping>
            <mapping>
               <value>212</value>
               <newvalue>voiceFGDEANA</newvalue>
            </mapping>
            <mapping>
               <value>213</value>
               <newvalue>voiceDID</newvalue>
            </mapping>
            <mapping>
               <value>214</value>
               <newvalue>mpegTransport</newvalue>
            </mapping>
            <mapping>
               <value>215</value>
               <newvalue>sixToFour</newvalue>
            </mapping>
            <mapping>
               <value>216</value>
               <newvalue>gtp</newvalue>
            </mapping>
            <mapping>
               <value>217</value>
               <newvalue>pdnEtherLoop1</newvalue>
            </mapping>
            <mapping>
               <value>218</value>
               <newvalue>pdnEtherLoop2</newvalue>
            </mapping>
            <mapping>
               <value>219</value>
               <newvalue>opticalChannelGroup</newvalue>
            </mapping>
            <mapping>
               <value>220</value>
               <newvalue>homepna</newvalue>
            </mapping>
            <mapping>
               <value>221</value>
               <newvalue>gfp</newvalue>
            </mapping>
            <mapping>
               <value>222</value>
               <newvalue>ciscoISLvlan</newvalue>
            </mapping>
            <mapping>
               <value>223</value>
               <newvalue>actelisMetaLOOP</newvalue>
            </mapping>
            <mapping>
               <value>224</value>
               <newvalue>fcipLink</newvalue>
            </mapping>
            <mapping>
               <value>225</value>
               <newvalue>rpr</newvalue>
            </mapping>
            <mapping>
               <value>226</value>
               <newvalue>qam</newvalue>
            </mapping>
            <mapping>
               <value>227</value>
               <newvalue>lmp</newvalue>
            </mapping>
            <mapping>
               <value>228</value>
               <newvalue>cblVectaStar</newvalue>
            </mapping>
            <mapping>
               <value>229</value>
               <newvalue>docsCableMCmtsDownstream</newvalue>
            </mapping>
            <mapping>
               <value>230</value>
               <newvalue>adsl2</newvalue>
            </mapping>
            <mapping>
               <value>231</value>
               <newvalue>macSecControlledIF</newvalue>
            </mapping>
            <mapping>
               <value>232</value>
               <newvalue>macSecUncontrolledIF</newvalue>
            </mapping>
            <mapping>
               <value>233</value>
               <newvalue>aviciOpticalEther</newvalue>
            </mapping>
            <mapping>
               <value>234</value>
               <newvalue>atmbond</newvalue>
            </mapping>
            <mapping>
               <value>235</value>
               <newvalue>voiceFGDOS</newvalue>
            </mapping>
            <mapping>
               <value>236</value>
               <newvalue>mocaVersion1</newvalue>
            </mapping>
            <mapping>
               <value>237</value>
               <newvalue>ieee80216WMAN</newvalue>
            </mapping>
            <mapping>
               <value>238</value>
               <newvalue>adsl2plus</newvalue>
            </mapping>
            <mapping>
               <value>239</value>
               <newvalue>dvbRcsMacLayer</newvalue>
            </mapping>
            <mapping>
               <value>240</value>
               <newvalue>dvbTdm</newvalue>
            </mapping>
            <mapping>
               <value>241</value>
               <newvalue>dvbRcsTdma</newvalue>
            </mapping>
            <mapping>
               <value>242</value>
               <newvalue>x86Laps</newvalue>
            </mapping>
            <mapping>
               <value>243</value>
               <newvalue>wwanPP</newvalue>
            </mapping>
            <mapping>
               <value>244</value>
               <newvalue>wwanPP2</newvalue>
            </mapping>
            <mapping>
               <value>245</value>
               <newvalue>voiceEBS</newvalue>
            </mapping>
            <mapping>
               <value>246</value>
               <newvalue>ifPwType</newvalue>
            </mapping>
            <mapping>
               <value>247</value>
               <newvalue>ilan</newvalue>
            </mapping>
            <mapping>
               <value>248</value>
               <newvalue>pip</newvalue>
            </mapping>
            <mapping>
               <value>249</value>
               <newvalue>aluELP</newvalue>
            </mapping>
            <mapping>
               <value>250</value>
               <newvalue>gpon</newvalue>
            </mapping>
            <mapping>
               <value>251</value>
               <newvalue>vdsl2</newvalue>
            </mapping>
            <mapping>
               <value>252</value>
               <newvalue>capwapDot11Profile</newvalue>
            </mapping>
            <mapping>
               <value>253</value>
               <newvalue>capwapDot11Bss</newvalue>
            </mapping>
            <mapping>
               <value>254</value>
               <newvalue>capwapWtpVirtualRadio</newvalue>
            </mapping>
            <mapping>
               <value>255</value>
               <newvalue>bits</newvalue>
            </mapping>
            <mapping>
               <value>256</value>
               <newvalue>docsCableUpstreamRfPort</newvalue>
            </mapping>
            <mapping>
               <value>257</value>
               <newvalue>cableDownstreamRfPort</newvalue>
            </mapping>
            <mapping>
               <value>258</value>
               <newvalue>vmwareVirtualNic</newvalue>
            </mapping>
            <mapping>
               <value>259</value>
               <newvalue>ieee802154</newvalue>
            </mapping>
            <mapping>
               <value>260</value>
               <newvalue>otnOdu</newvalue>
            </mapping>
            <mapping>
               <value>261</value>
               <newvalue>otnOtu</newvalue>
            </mapping>
            <mapping>
               <value>262</value>
               <newvalue>ifVfiType</newvalue>
            </mapping>
            <mapping>
               <value>263</value>
               <newvalue>g9981</newvalue>
            </mapping>
            <mapping>
               <value>264</value>
               <newvalue>g9982</newvalue>
            </mapping>
            <mapping>
               <value>265</value>
               <newvalue>g9983</newvalue>
            </mapping>
            <mapping>
               <value>266</value>
               <newvalue>aluEpon</newvalue>
            </mapping>
            <mapping>
               <value>267</value>
               <newvalue>aluEponOnu</newvalue>
            </mapping>
            <mapping>
               <value>268</value>
               <newvalue>aluEponPhysicalUni</newvalue>
            </mapping>
            <mapping>
               <value>269</value>
               <newvalue>aluEponLogicalLink</newvalue>
            </mapping>
            <mapping>
               <value>270</value>
               <newvalue>aluGponOnu</newvalue>
            </mapping>
            <mapping>
               <value>271</value>
               <newvalue>aluGponPhysicalUni</newvalue>
            </mapping>
            <mapping>
               <value>272</value>
               <newvalue>vmwareNicTeam</newvalue>
            </mapping>
            <mapping>
               <value>277</value>
               <newvalue>docsOfdmDownstream</newvalue>
            </mapping>
            <mapping>
               <value>278</value>
               <newvalue>docsOfdmaUpstream</newvalue>
            </mapping>
            <mapping>
               <value>279</value>
               <newvalue>gfast</newvalue>
            </mapping>
            <mapping>
               <value>280</value>
               <newvalue>sdci</newvalue>
            </mapping>
            <mapping>
               <value>281</value>
               <newvalue>xboxWireless</newvalue>
            </mapping>
            <mapping>
               <value>282</value>
               <newvalue>fastdsl</newvalue>
            </mapping>
            <mapping>
               <value>283</value>
               <newvalue>docsCableScte55d1FwdOob</newvalue>
            </mapping>
            <mapping>
               <value>284</value>
               <newvalue>docsCableScte55d1RetOob</newvalue>
            </mapping>
            <mapping>
               <value>285</value>
               <newvalue>docsCableScte55d2DsOob</newvalue>
            </mapping>
            <mapping>
               <value>286</value>
               <newvalue>docsCableScte55d2UsOob</newvalue>
            </mapping>
            <mapping>
               <value>287</value>
               <newvalue>docsCableNdf</newvalue>
            </mapping>
            <mapping>
               <value>288</value>
               <newvalue>docsCableNdr</newvalue>
            </mapping>
            <mapping>
               <value>289</value>
               <newvalue>ptm</newvalue>
            </mapping>
            <mapping>
               <value>290</value>
               <newvalue>ghn</newvalue>
            </mapping>
         </mappings>
      </value_map>
      <value_map>
         <name>Services status</name>
         <mappings>
            <mapping>
               <value>0</value>
               <newvalue>not running</newvalue>
            </mapping>
            <mapping>
               <value>2</value>
               <newvalue>running</newvalue>
            </mapping>
         </mappings>
      </value_map>
      <value_map>
         <name>Service state</name>
         <mappings>
            <mapping>
               <value>0</value>
               <newvalue>Down</newvalue>
            </mapping>
            <mapping>
               <value>1</value>
               <newvalue>Up</newvalue>
            </mapping>
         </mappings>
      </value_map>
      <value_map>
         <name>SNMPv2-TC::TruthValue</name>
         <mappings>
            <mapping>
               <value>1</value>
               <newvalue>true</newvalue>
            </mapping>
            <mapping>
               <value>2</value>
               <newvalue>false</newvalue>
            </mapping>
         </mappings>
      </value_map>
      <value_map>
         <name>zabbix.host.available</name>
         <mappings>
            <mapping>
               <value>0</value>
               <newvalue>not available</newvalue>
            </mapping>
            <mapping>
               <value>1</value>
               <newvalue>available</newvalue>
            </mapping>
            <mapping>
               <value>2</value>
               <newvalue>unknown</newvalue>
            </mapping>
         </mappings>
      </value_map>
   </value_maps>
</zabbix_export>
