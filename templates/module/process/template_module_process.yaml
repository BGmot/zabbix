zabbix_export:
  version: '6.2'
  date: '2022-09-23T15:56:00Z'
  template_groups:
    -
      uuid: 57b7ae836ca64446ba2c296389c009b7
      name: Templates/Modules
  templates:
    -
      uuid: 0f6889282f6048e2b1370e569e578985
      template: 'OS processes by Zabbix agent'
      name: 'OS processes by Zabbix agent'
      description: |
        Get processes metrics using item proc.get by Zabbix agent.
        
        You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback
        
        Template tooling version used: 0.42
      groups:
        -
          name: Templates/Modules
      items:
        -
          uuid: 803390429cf949d3b8439dd5dd71c706
          name: 'OS: Get process summary'
          key: 'proc.get[,,,summary]'
          history: '0'
          trends: '0'
          value_type: TEXT
          description: 'Summary metrics data for all processes.'
          tags:
            -
              tag: component
              value: raw
      discovery_rules:
        -
          uuid: 7c0e8b719d0e464f92ee42a3da75b682
          name: 'Processes discovery'
          type: DEPENDENT
          key: custom.proc.discovery
          delay: '0'
          filter:
            evaltype: AND
            conditions:
              -
                macro: '{#VMEM}'
                value: '-1'
                operator: NOT_MATCHES_REGEX
                formulaid: C
              -
                macro: '{#NAME}'
                value: '{$PROC.SUM.NAME.MATCHES}'
                formulaid: A
              -
                macro: '{#NAME}'
                value: '{$PROC.SUM.NAME.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
                formulaid: B
          description: 'Discovery of summary process OS.'
          item_prototypes:
            -
              uuid: 10997fb0354744939e8ee034c6d26065
              name: 'Process [{#NAME}]: Error'
              type: DEPENDENT
              key: 'custom.proc.error[{#NAME}]'
              delay: '0'
              history: 7d
              trends: '0'
              value_type: TEXT
              description: 'Check raw process {#NAME}.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - $.error
              master_item:
                key: 'custom.proc.get[{#NAME}]'
              tags:
                -
                  tag: component
                  value: memory
                -
                  tag: process
                  value: '{#NAME}'
              trigger_prototypes:
                -
                  uuid: 915df5dbf24a436e892b1ec9ae0f4cb9
                  expression: 'length(last(/OS processes by Zabbix agent/custom.proc.error[{#NAME}]))>0'
                  name: 'Process [{#NAME}]: down'
                  priority: AVERAGE
                  tags:
                    -
                      tag: scope
                      value: availability
            -
              uuid: 2e9b31e2b47741f4b35c5d15f33378ea
              name: 'Process [{#NAME}]: Get data'
              type: DEPENDENT
              key: 'custom.proc.get[{#NAME}]'
              delay: '0'
              history: 0d
              trends: '0'
              value_type: TEXT
              description: 'Summary metrics by process {#NAME}.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$.[?(@["name"]=="{#NAME}")]'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: 'no data'
                -
                  type: JAVASCRIPT
                  parameters:
                    - |
                      var data = {};
                      try {
                         data.value = JSON.parse(value)
                         data.error = ''
                       }
                      catch (error) {
                         data.error = 'no data'
                         data.value = ''
                       }
                      return JSON.stringify(data);
              master_item:
                key: 'proc.get[,,,summary]'
              tags:
                -
                  tag: component
                  value: raw
                -
                  tag: process
                  value: '{#NAME}'
            -
              uuid: 822ffda22eb042b89fc50b212aab133f
              name: 'Process [{#NAME}]: Size of locked memory'
              type: DEPENDENT
              key: 'custom.proc.mem.locked[{#NAME}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              units: B
              description: 'Size of locked memory {#NAME}.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - $.value..lck.first()
                  error_handler: DISCARD_VALUE
              master_item:
                key: 'custom.proc.get[{#NAME}]'
              tags:
                -
                  tag: component
                  value: memory
                -
                  tag: process
                  value: '{#NAME}'
            -
              uuid: 0bb7d924b8814c42a494d8a3baf48a59
              name: 'Process [{#NAME}]: Number of processes'
              type: DEPENDENT
              key: 'custom.proc.num[{#NAME}]'
              delay: '0'
              history: 7d
              description: 'Count process {#NAME}'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - $.value..processes.first()
                  error_handler: DISCARD_VALUE
              master_item:
                key: 'custom.proc.get[{#NAME}]'
              tags:
                -
                  tag: component
                  value: system
                -
                  tag: process
                  value: '{#NAME}'
            -
              uuid: abccdac17c7e4b549fcfe70ceeedeb9b
              name: 'Process [{#NAME}]: Number of page faults'
              type: DEPENDENT
              key: 'custom.proc.page[{#NAME}]'
              delay: '0'
              history: 7d
              description: 'Number of page faults {#NAME}.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - $.value..page_faults.first()
                  error_handler: DISCARD_VALUE
              master_item:
                key: 'custom.proc.get[{#NAME}]'
              tags:
                -
                  tag: component
                  value: system
                -
                  tag: process
                  value: '{#NAME}'
            -
              uuid: 4ffd202fb6044b819f6f28dc866ca8f1
              name: 'Process [{#NAME}]: Percentage of real memory'
              type: DEPENDENT
              key: 'custom.proc.pmem[{#NAME}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              units: '%'
              description: 'Percentage of real memory used by process {#NAME}.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - $.value..pmem.first()
                  error_handler: DISCARD_VALUE
              master_item:
                key: 'custom.proc.get[{#NAME}]'
              tags:
                -
                  tag: component
                  value: memory
                -
                  tag: process
                  value: '{#NAME}'
            -
              uuid: 7e573e38bce04167bc37712c0a3e2194
              name: 'Process [{#NAME}]: Summary of resident memory size'
              type: DEPENDENT
              key: 'custom.proc.rss[{#NAME}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              units: B
              description: 'Summary resident set size memory used by process {#NAME} in bytes.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - $.value..rss.first()
                  error_handler: DISCARD_VALUE
              master_item:
                key: 'custom.proc.get[{#NAME}]'
              tags:
                -
                  tag: component
                  value: memory
                -
                  tag: process
                  value: '{#NAME}'
            -
              uuid: 12370d3b25024d2189cddba8d3b23938
              name: 'Process [{#NAME}]: Swap space used'
              type: DEPENDENT
              key: 'custom.proc.swap[{#NAME}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              units: B
              description: 'Size of swap space used {#NAME}.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - $.value..swap.first()
                  error_handler: DISCARD_VALUE
              master_item:
                key: 'custom.proc.get[{#NAME}]'
              tags:
                -
                  tag: component
                  value: memory
                -
                  tag: process
                  value: '{#NAME}'
            -
              uuid: a7265ca1b1d2463294e26d80fe075639
              name: 'Process [{#NAME}]: Number of threads'
              type: DEPENDENT
              key: 'custom.proc.thread[{#NAME}]'
              delay: '0'
              history: 7d
              description: 'Number of threads {#NAME}.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - $.value..threads.first()
                  error_handler: DISCARD_VALUE
              master_item:
                key: 'custom.proc.get[{#NAME}]'
              tags:
                -
                  tag: component
                  value: system
                -
                  tag: process
                  value: '{#NAME}'
            -
              uuid: c1b9b1d8f28947589e46041690899100
              name: 'Process [{#NAME}]: Summary of virtual memory size'
              type: DEPENDENT
              key: 'custom.proc.vmem[{#NAME}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              units: B
              description: 'Summary virtual memory used by process {#NAME} in bytes.'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - $.value..vsize.first()
                  error_handler: DISCARD_VALUE
              master_item:
                key: 'custom.proc.get[{#NAME}]'
              tags:
                -
                  tag: component
                  value: memory
                -
                  tag: process
                  value: '{#NAME}'
          graph_prototypes:
            -
              uuid: b8f5b539152445fdbadbfba92adad1bf
              name: 'Process [{#NAME}]: Memory usage[{#NAME}]'
              graph_items:
                -
                  drawtype: BOLD_LINE
                  color: 1A7C11
                  item:
                    host: 'OS processes by Zabbix agent'
                    key: 'custom.proc.vmem[{#NAME}]'
                -
                  sortorder: '1'
                  drawtype: BOLD_LINE
                  color: 2774A4
                  item:
                    host: 'OS processes by Zabbix agent'
                    key: 'custom.proc.rss[{#NAME}]'
          master_item:
            key: 'proc.get[,,,summary]'
          lld_macro_paths:
            -
              lld_macro: '{#NAME}'
              path: $.name
            -
              lld_macro: '{#VMEM}'
              path: $.vsize
      macros:
        -
          macro: '{$PROC.SUM.NAME.MATCHES}'
          value: '<CHANGE VALUE>'
          description: 'This macro is used in processes discovery. Can be overridden on the host or linked template level.'
        -
          macro: '{$PROC.SUM.NAME.NOT_MATCHES}'
          value: '<CHANGE VALUE>'
          description: 'This macro is used in processes discovery. Can be overridden on the host or linked template level.'
