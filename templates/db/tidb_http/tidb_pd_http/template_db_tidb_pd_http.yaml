zabbix_export:
  version: '5.2'
  date: '2021-03-04T16:06:51Z'
  groups:
    -
      name: Templates/Databases
  templates:
    -
      template: 'TiDB PD by HTTP'
      name: 'TiDB PD by HTTP'
      description: |
        You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback
        
        Template tooling version used: 0.38
      groups:
        -
          name: Templates/Databases
      applications:
        -
          name: 'PD node'
        -
          name: 'TIDB cluster'
        -
          name: 'Zabbix raw items'
      items:
        -
          name: 'PD: Get instance metrics'
          type: HTTP_AGENT
          key: pd.get_metrics
          history: '0'
          trends: '0'
          value_type: TEXT
          applications:
            -
              name: 'Zabbix raw items'
          preprocessing:
            -
              type: PROMETHEUS_TO_JSON
              parameters:
                - ''
          url: '{$PD.URL}:{$PD.PORT}/metrics'
        -
          name: 'PD: Get instance status'
          type: HTTP_AGENT
          key: pd.get_status
          history: '0'
          trends: '0'
          value_type: TEXT
          applications:
            -
              name: 'Zabbix raw items'
          url: '{$PD.URL}:{$PD.PORT}/pd/api/v1/status'
        -
          name: 'PD: GRPC Commands total, rate'
          type: DEPENDENT
          key: pd.grpc_command.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'The rate at which gRPC commands are completed.'
          applications:
            -
              name: 'PD node'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name == "grpc_server_handling_seconds_count")].value.sum()'
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: pd.get_metrics
        -
          name: 'PD: Uptime'
          type: DEPENDENT
          key: pd.uptime
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: uptime
          description: 'The runtime of each PD instance.'
          applications:
            -
              name: 'PD node'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.start_timestamp
            -
              type: JAVASCRIPT
              parameters:
                - |
                  //use boottime to calculate uptime
                  return (Math.floor(Date.now()/1000)-Number(value));
                  
          master_item:
            key: pd.get_status
          triggers:
            -
              expression: '{last()}<10m'
              name: 'PD: has been restarted (uptime < 10m)'
              priority: INFO
              description: 'Uptime is less than 10 minutes'
              manual_close: 'YES'
        -
          name: 'PD: Version'
          type: DEPENDENT
          key: pd.version
          delay: '0'
          history: 7d
          trends: '0'
          value_type: CHAR
          description: 'Version of the PD instance.'
          applications:
            -
              name: 'PD node'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.version
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 3h
          master_item:
            key: pd.get_status
          triggers:
            -
              expression: '{diff()}=1 and {strlen()}>0'
              name: 'PD: Version has changed (new version: {ITEM.VALUE})'
              priority: INFO
              description: 'PD version has changed. Ack to close.'
              manual_close: 'YES'
      discovery_rules:
        -
          name: 'Cluster metrics discovery'
          type: DEPENDENT
          key: pd.cluster.discovery
          delay: '0'
          item_prototypes:
            -
              name: 'TIDB cluster: Number of regions'
              type: DEPENDENT
              key: 'pd.cluster_status.leader_count[{#SINGLETON}]'
              delay: '0'
              history: 7d
              description: 'The total count of cluster Regions.'
              applications:
                -
                  name: 'TIDB cluster'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_cluster_status" && @.labels.type == "leader_count")].value.first()'
              master_item:
                key: pd.get_metrics
            -
              name: 'TIDB cluster: Current peer count'
              type: DEPENDENT
              key: 'pd.cluster_status.region_count[{#SINGLETON}]'
              delay: '0'
              history: 7d
              description: 'The current count of all cluster peers.'
              applications:
                -
                  name: 'TIDB cluster'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_cluster_status" && @.labels.type == "region_count")].value.first()'
              master_item:
                key: pd.get_metrics
            -
              name: 'TIDB cluster: Storage capacity'
              type: DEPENDENT
              key: 'pd.cluster_status.storage_capacity[{#SINGLETON}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              units: B
              description: 'The total storage capacity for this TiDB cluster.'
              applications:
                -
                  name: 'TIDB cluster'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_cluster_status" && @.labels.type == "storage_capacity")].value.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: pd.get_metrics
            -
              name: 'TIDB cluster: Storage size'
              type: DEPENDENT
              key: 'pd.cluster_status.storage_size[{#SINGLETON}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              units: B
              description: 'The storage size that is currently used by the TiDB cluster.'
              applications:
                -
                  name: 'TIDB cluster'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_cluster_status" && @.labels.type == "storage_size")].value.first()'
              master_item:
                key: pd.get_metrics
            -
              name: 'TIDB cluster: Disconnect stores'
              type: DEPENDENT
              key: 'pd.cluster_status.store_disconnected[{#SINGLETON}]'
              delay: '0'
              history: 7d
              description: 'The count of disconnected stores.'
              applications:
                -
                  name: 'TIDB cluster'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_cluster_status" && @.labels.type == "store_disconnected_count")].value.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: pd.get_metrics
              trigger_prototypes:
                -
                  expression: '{last()}>0'
                  name: 'TIDB cluster: There are disconnected TiKV nodes'
                  priority: WARNING
                  description: 'PD does not receive a TiKV heartbeat within 20 seconds. Normally a TiKV heartbeat comes in every 10 seconds.'
            -
              name: 'TIDB cluster: Down stores'
              type: DEPENDENT
              key: 'pd.cluster_status.store_down[{#SINGLETON}]'
              delay: '0'
              history: 7d
              description: 'The count of down stores.'
              applications:
                -
                  name: 'TIDB cluster'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_cluster_status" && @.labels.type == "store_down_count")].value.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: pd.get_metrics
              trigger_prototypes:
                -
                  expression: '{last()}>0'
                  name: 'TIDB cluster: There are offline TiKV nodes'
                  priority: AVERAGE
                  description: 'PD has not received a TiKV heartbeat for a long time.'
            -
              name: 'TIDB cluster: Lowspace stores'
              type: DEPENDENT
              key: 'pd.cluster_status.store_low_space[{#SINGLETON}]'
              delay: '0'
              history: 7d
              description: 'The count of low space stores.'
              applications:
                -
                  name: 'TIDB cluster'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_cluster_status" && @.labels.type == "store_low_space_count")].value.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: pd.get_metrics
              trigger_prototypes:
                -
                  expression: '{last()}>0'
                  name: 'TIDB cluster: There are low space TiKV nodes'
                  priority: AVERAGE
                  description: 'Indicates that there is no sufficient space on the TiKV node.'
            -
              name: 'TIDB cluster: Offline stores'
              type: DEPENDENT
              key: 'pd.cluster_status.store_offline[{#SINGLETON}]'
              delay: '0'
              history: 7d
              applications:
                -
                  name: 'TIDB cluster'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_cluster_status" && @.labels.type == "store_offline_count")].value.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: pd.get_metrics
            -
              name: 'TIDB cluster: Tombstone stores'
              type: DEPENDENT
              key: 'pd.cluster_status.store_tombstone[{#SINGLETON}]'
              delay: '0'
              history: 7d
              description: 'The count of tombstone stores.'
              applications:
                -
                  name: 'TIDB cluster'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_cluster_status" && @.labels.type == "store_tombstone_count")].value.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: pd.get_metrics
            -
              name: 'TIDB cluster: Unhealth stores'
              type: DEPENDENT
              key: 'pd.cluster_status.store_unhealth[{#SINGLETON}]'
              delay: '0'
              history: 7d
              description: 'The count of unhealthy stores.'
              applications:
                -
                  name: 'TIDB cluster'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_cluster_status" && @.labels.type == "store_unhealth_count")].value.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: pd.get_metrics
            -
              name: 'TIDB cluster: Normal stores'
              type: DEPENDENT
              key: 'pd.cluster_status.store_up[{#SINGLETON}]'
              delay: '0'
              history: 7d
              description: 'The count of healthy storage instances.'
              applications:
                -
                  name: 'TIDB cluster'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_cluster_status" && @.labels.type == "store_up_count")].value.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: pd.get_metrics
          trigger_prototypes:
            -
              expression: '{TiDB PD by HTTP:pd.cluster_status.storage_size[{#SINGLETON}].min(5m)}/{TiDB PD by HTTP:pd.cluster_status.storage_capacity[{#SINGLETON}].last()}*100>{$PD.STORAGE_USAGE.MAX.WARN}'
              name: 'TIDB cluster: Current storage usage is too high (over {$PD.STORAGE_USAGE.MAX.WARN}% for 5m)'
              priority: WARNING
              description: 'Over {$PD.STORAGE_USAGE.MAX.WARN}% of the cluster space is occupied.'
          graph_prototypes:
            -
              name: 'TIDB cluster: Storage Usage[{#SINGLETON}]'
              graph_items:
                -
                  color: 1A7C11
                  item:
                    host: 'TiDB PD by HTTP'
                    key: 'pd.cluster_status.storage_size[{#SINGLETON}]'
                -
                  sortorder: '1'
                  color: 2774A4
                  item:
                    host: 'TiDB PD by HTTP'
                    key: 'pd.cluster_status.storage_capacity[{#SINGLETON}]'
          master_item:
            key: pd.get_metrics
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name=="pd_cluster_status")]'
              error_handler: CUSTOM_VALUE
              error_handler_params: '[]'
            -
              type: JAVASCRIPT
              parameters:
                - 'return JSON.stringify(value != "[]" ? [{''{#SINGLETON}'': ''''}] : []);'
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
        -
          name: 'gRPC commands discovery'
          type: DEPENDENT
          key: pd.grpc_command.discovery
          delay: '0'
          item_prototypes:
            -
              name: 'PD: GRPC Commands: {#GRPC_METHOD}, rate'
              type: DEPENDENT
              key: 'pd.grpc_command.rate[{#GRPC_METHOD}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'The rate per command type at which gRPC commands are completed.'
              applications:
                -
                  name: 'PD node'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "grpc_server_handling_seconds_count" && @.labels.grpc_method == "{#GRPC_METHOD}")].value.first()'
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
              master_item:
                key: pd.get_metrics
          master_item:
            key: pd.get_metrics
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name == "grpc_server_handling_seconds_count")]'
            -
              type: JAVASCRIPT
              parameters:
                - |
                  var data = JSON.parse(value),
                    lookup = {},
                    result =[];
                  for (var item, i = 0; item = data[i++];) {
                    var grpc_method = item.labels.grpc_method;
                      if (!(grpc_method in lookup)) {
                        lookup[grpc_method] = 1;
                        result.push({ "{#GRPC_METHOD}": grpc_method});
                            }
                      }
                    return JSON.stringify(result);
                  
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
        -
          name: 'Region discovery'
          type: DEPENDENT
          key: pd.region.discovery
          delay: '0'
          item_prototypes:
            -
              name: 'PD: Region heartbeat: error, rate'
              type: DEPENDENT
              key: 'pd.region_heartbeat.error.rate[{#STORE_ADDRESS}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'The count of heartbeats with the error status per second.'
              application_prototypes:
                -
                  name: 'TiDB Store [{#STORE_ADDRESS}]'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_scheduler_region_heartbeat" && @.labels.status == "err" && @.labels.type == "report" && @.labels.address == "{#STORE_ADDRESS}")].value.sum()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
              master_item:
                key: pd.get_metrics
            -
              name: 'PD: Region heartbeat: active, rate'
              type: DEPENDENT
              key: 'pd.region_heartbeat.ok.rate[{#STORE_ADDRESS}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'The count of heartbeats with the ok status per second.'
              application_prototypes:
                -
                  name: 'TiDB Store [{#STORE_ADDRESS}]'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_scheduler_region_heartbeat" && @.labels.status == "ok" && @.labels.type == "report" && @.labels.address == "{#STORE_ADDRESS}")].value.sum()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
              master_item:
                key: pd.get_metrics
            -
              name: 'PD: Region schedule push: total, rate'
              type: DEPENDENT
              key: 'pd.region_heartbeat.push.err.rate[{#STORE_ADDRESS}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              application_prototypes:
                -
                  name: 'TiDB Store [{#STORE_ADDRESS}]'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_scheduler_region_heartbeat" && @.labels.type == "push" && @.labels.address == "{#STORE_ADDRESS}")].value.sum()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
              master_item:
                key: pd.get_metrics
            -
              name: 'PD: Region heartbeat: total, rate'
              type: DEPENDENT
              key: 'pd.region_heartbeat.rate[{#STORE_ADDRESS}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'The count of heartbeats reported to PD per instance per second.'
              application_prototypes:
                -
                  name: 'TiDB Store [{#STORE_ADDRESS}]'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_scheduler_region_heartbeat" && @.labels.type == "report" && @.labels.address == "{#STORE_ADDRESS}")].value.sum()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
              master_item:
                key: pd.get_metrics
          master_item:
            key: pd.get_metrics
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name == "pd_scheduler_region_heartbeat")]'
            -
              type: JAVASCRIPT
              parameters:
                - |
                  var data = JSON.parse(value),
                    lookup = {},
                    result =[];
                  for (var item, i = 0; item = data[i++];) {
                    var address = item.labels.address;
                      if (!(address in lookup)) {
                        lookup[address] = 1;
                        result.push({ "{#STORE_ADDRESS}": address});
                            }
                      }
                    return JSON.stringify(result);
                  
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
        -
          name: 'Region labels discovery'
          type: DEPENDENT
          key: pd.region_labels.discovery
          delay: '0'
          item_prototypes:
            -
              name: 'TIDB cluster: Regions label: {#TYPE}'
              type: DEPENDENT
              key: 'pd.region_labels[{#TYPE}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'The number of Regions in different label levels.'
              applications:
                -
                  name: 'TIDB cluster'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_regions_label_level" && @.labels.type == "{#TYPE}")].value.first()'
              master_item:
                key: pd.get_metrics
          master_item:
            key: pd.get_metrics
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name == "pd_regions_label_level")]'
            -
              type: JAVASCRIPT
              parameters:
                - |
                  output = JSON.parse(value).map(function(item){
                       return {
                           "{#TYPE}": item.labels.type,
                       }})
                   return JSON.stringify({"data": output})
                  
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
        -
          name: 'Region status discovery'
          type: DEPENDENT
          key: pd.region_status.discovery
          delay: '0'
          item_prototypes:
            -
              name: 'TIDB cluster: Regions status: {#TYPE}'
              type: DEPENDENT
              key: 'pd.region_status[{#TYPE}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'The health status of Regions indicated via the count of unusual Regions including pending peers, down peers, extra peers, offline peers, missing peers, learner peers and incorrect namespaces.'
              applications:
                -
                  name: 'TIDB cluster'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_regions_status" && @.labels.type == "{#TYPE}")].value.first()'
              master_item:
                key: pd.get_metrics
              trigger_prototypes:
                -
                  expression: '{min(5m)}>0'
                  name: 'TIDB cluster: There are unresponsive peers'
                  priority: WARNING
                  description: 'The number of Regions with an unresponsive peer reported by the Raft leader.'
                -
                  expression: '{min(5m)}>{$PD.MISS_REGION.MAX.WARN}'
                  name: 'TIDB cluster: Too many missed regions (over {$PD.MISS_REGION.MAX.WARN} in 5m)'
                  priority: WARNING
                  description: 'The number of Region replicas is smaller than the value of max-replicas. When a TiKV machine is down and its downtime exceeds max-down-time, it usually leads to missing replicas for some Regions during a period of time. When a TiKV node is made offline, it might result in a small number of Regions with missing replicas.'
          master_item:
            key: pd.get_metrics
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name == "pd_regions_status")]'
            -
              type: JAVASCRIPT
              parameters:
                - |
                  output = JSON.parse(value).map(function(item){
                       return {
                           "{#TYPE}": item.labels.type,
                       }})
                   return JSON.stringify({"data": output})
                  
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          overrides:
            -
              name: miss_region_trigger
              step: '1'
              filter:
                conditions:
                  -
                    macro: '{#TYPE}'
                    value: miss_peer_region_count
                    formulaid: A
              operations:
                -
                  operationobject: TRIGGER_PROTOTYPE
                  operator: LIKE
                  value: 'Too many missed regions'
                  status: ENABLED
                  discover: DISCOVER
            -
              name: unresponsive_trigger
              step: '2'
              filter:
                conditions:
                  -
                    macro: '{#TYPE}'
                    value: down_peer_region_count
                    formulaid: A
              operations:
                -
                  operationobject: TRIGGER_PROTOTYPE
                  operator: LIKE
                  value: 'There are unresponsive peers'
                  status: ENABLED
                  discover: DISCOVER
        -
          name: 'Running scheduler discovery'
          type: DEPENDENT
          key: pd.scheduler.discovery
          delay: '0'
          item_prototypes:
            -
              name: 'TIDB cluster: Scheduler status: {#KIND}'
              type: DEPENDENT
              key: 'pd.scheduler[{#KIND}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'The current running schedulers.'
              applications:
                -
                  name: 'TIDB cluster'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$[?(@.name == "pd_regions_status" && @.labels.type == "allow" && @.labels.kind == "{#KIND}")].value.first()'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: '0'
              master_item:
                key: pd.get_metrics
          master_item:
            key: pd.get_metrics
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name == "pd_scheduler_status" && @.labels.type == "allow")]'
            -
              type: JAVASCRIPT
              parameters:
                - |
                  output = JSON.parse(value).map(function(item){
                       return {
                           "{#KIND}": item.labels.kind,
                       }})
                   return JSON.stringify({"data": output})
                  
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
      macros:
        -
          macro: '{$PD.MISS_REGION.MAX.WARN}'
          value: '100'
          description: 'Maximum number of missed regions'
        -
          macro: '{$PD.PORT}'
          value: '2379'
          description: 'The port of PD server metrics web endpoint'
        -
          macro: '{$PD.STORAGE_USAGE.MAX.WARN}'
          value: '80'
          description: 'Maximum percentage of cluster space used'
        -
          macro: '{$PD.URL}'
          value: localhost
          description: 'PD server URL'
